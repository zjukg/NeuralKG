Search.setIndex({"docnames": ["gnnmodel", "index", "install", "kgemodel", "modules", "neuralkg_ind", "neuralkg_ind.data", "neuralkg_ind.eval_task", "neuralkg_ind.lit_model", "neuralkg_ind.loss", "neuralkg_ind.model", "neuralkg_ind.utils", "result", "rulemodel"], "filenames": ["gnnmodel.rst", "index.rst", "install.rst", "kgemodel.rst", "modules.rst", "neuralkg_ind.rst", "neuralkg_ind.data.rst", "neuralkg_ind.eval_task.rst", "neuralkg_ind.lit_model.rst", "neuralkg_ind.loss.rst", "neuralkg_ind.model.rst", "neuralkg_ind.utils.rst", "result.md", "rulemodel.rst"], "titles": ["GNNModel", "NeuralKG-ind Documentation", "Install", "KGEModel", "neuralkg_ind", "NeuralKG-ind", "Data", "Eval_Task", "Lit_Model", "loss", "Model", "Utils", "Results", "RuleModel"], "terms": {"class": [0, 3, 6, 8, 9, 11, 13], "neuralkg_ind": [0, 3, 6, 7, 8, 9, 11, 13], "arg": [0, 3, 5, 6, 8, 9, 11, 13], "sourc": [0, 3, 6, 7, 8, 9, 11, 13], "base": [0, 1, 3, 6, 8, 9, 13], "modul": [0, 1, 3, 8, 9, 11, 13], "init_emb": [0, 3, 13], "build_model": 0, "build_hidden_lay": 0, "forward": [0, 3, 5, 8, 9, 13], "defin": [0, 3, 8, 9, 13], "comput": [0, 3, 8, 9, 13], "perform": [0, 3, 9, 13], "everi": [0, 3, 8, 9, 13], "call": [0, 3, 8, 9, 13], "should": [0, 3, 6, 8, 9, 13], "overridden": [0, 3, 8, 9, 13], "all": [0, 3, 6, 7, 8, 9, 13], "subclass": [0, 3, 9, 13], "although": [0, 3, 9, 13], "recip": [0, 3, 9, 13], "pass": [0, 3, 6, 8, 9, 13], "need": [0, 3, 6, 8, 9, 13], "within": [0, 3, 9, 13], "thi": [0, 3, 6, 8, 9, 13], "function": [0, 3, 6, 8, 9, 13], "one": [0, 3, 6, 8, 9, 13], "instanc": [0, 3, 8, 9, 13], "afterward": [0, 3, 9, 13], "instead": [0, 3, 9, 13], "sinc": [0, 3, 9, 13], "former": [0, 3, 8, 9, 13], "take": [0, 3, 9, 11, 13], "care": [0, 3, 9, 13], "run": [0, 3, 8, 9, 13], "regist": [0, 3, 9, 13], "hook": [0, 3, 8, 9, 13], "while": [0, 3, 8, 9, 13], "latter": [0, 3, 8, 9, 13], "silent": [0, 3, 9, 13], "ignor": [0, 3, 9, 13], "them": [0, 3, 6, 9, 13], "train": [0, 3, 5, 6, 7, 8, 9, 11, 13], "bool": [0, 3, 6, 8, 9, 13], "gnnlayer": [0, 5], "messag": 0, "edg": [0, 6, 11], "g": [0, 8, 11], "feat": 0, "aggreg": [0, 5], "emb_dim": [0, 3, 13], "node": [0, 6, 11], "abstract": 0, "update_embed": 0, "nei_msg": 0, "sumaggreg": [0, 5], "curr_emb": 0, "mlpaggreg": [0, 5], "gruaggreg": [0, 5], "batchgru": [0, 5], "hidden_s": 0, "300": 0, "a_scop": 0, "commun": 0, "induct": [0, 1, 6, 7, 8, 12], "relat": [0, 3, 5, 6, 13], "reason": [0, 13], "which": [0, 1, 3, 6, 8, 13], "over": [0, 8], "local": 0, "direct": [0, 3, 6], "subgraph": [0, 6, 11], "structur": [0, 6], "strengthen": 0, "interact": [0, 3], "between": [0, 3, 8, 13], "entitl": 0, "through": [0, 8], "kernel": 0, "configur": [0, 3, 6, 8, 11, 13], "paramet": [0, 3, 6, 7, 8, 9, 13], "latent_dim": 0, "latent": 0, "dimens": [0, 3, 13], "output_dim": 0, "output": [0, 8], "node_emb": 0, "embed": [0, 3, 13], "relation_emb": [0, 3, 13], "size": [0, 3, 6, 8], "hidden": [0, 8], "calcul": [0, 3, 6, 7, 8, 9, 13], "score": [0, 3, 7, 9, 13], "tripl": [0, 3, 5, 6, 7, 11, 13], "return": [0, 3, 6, 7, 8, 9, 11, 13], "The": [0, 3, 6, 7, 8, 9, 13], "convolut": [0, 3], "type": [0, 3, 6, 7, 8, 11, 13], "out_conv": 0, "batch_subgraph": 0, "source_emb": 0, "entiti": [0, 3, 5, 6, 7, 13], "target_emb": 0, "target": [0, 3], "graph_emb": 0, "compileconv": 0, "node_feat": 0, "edge_feat": 0, "e2n_sp": 0, "e2n_sp2": 0, "graph_siz": 0, "target_rel": 0, "total_sourc": 0, "total_target": 0, "source_nod": 0, "target_nod": 0, "edge_s": 0, "none": [0, 3, 6, 7, 8, 9, 11, 13], "node_deg": 0, "graph": [0, 1, 3, 5, 6, 11, 13], "featur": [0, 3, 6], "spars": [0, 11], "matrix": [0, 3, 6, 11], "number": [0, 3, 6, 8, 13], "each": [0, 3, 6, 8, 13], "label": [0, 5, 6, 7, 8, 9], "total": 0, "degre": 0, "gmol_vec": 0, "myspmm": [0, 5], "kwarg": [0, 6, 8], "static": [0, 6, 8], "ctx": 0, "sp_mat": 0, "dense_mat": 0, "oper": [0, 8], "i": [0, 1, 3, 6, 7, 8, 9, 11, 13], "It": [0, 6, 8], "must": [0, 8], "accept": 0, "context": 0, "first": [0, 3, 6, 8], "argument": [0, 6, 8, 11], "follow": [0, 6], "ani": [0, 6, 8], "tensor": [0, 3, 6, 7, 8, 13], "other": [0, 7, 11], "can": [0, 3, 6, 8], "us": [0, 3, 6, 8, 12, 13], "store": [0, 3, 11, 13], "arbitrari": [0, 6], "data": [0, 1, 3, 5, 8, 11, 13], "retriev": 0, "dure": 0, "backward": [0, 8], "grad_output": 0, "formula": [0, 3, 13], "differenti": 0, "mani": [0, 3, 8], "non": [0, 13], "were": 0, "input": [0, 3, 13], "gradient": [0, 3, 8], "w": [0, 3, 9], "r": [0, 3, 6, 9, 13], "t": [0, 3, 6, 8, 9, 13], "given": [0, 8], "valu": [0, 3, 6, 8], "correspond": [0, 6, 8], "If": [0, 3, 6, 8], "an": [0, 6, 8], "requir": [0, 8], "grad": 0, "you": [0, 6, 8], "just": 0, "save": [0, 3, 6, 13], "also": [0, 6, 8], "ha": [0, 3, 8, 13], "attribut": [0, 6, 9], "needs_input_grad": 0, "tupl": [0, 6, 8], "boolean": 0, "repres": [0, 3], "whether": [0, 6], "e": [0, 3, 8, 11, 13], "have": [0, 6, 8], "0": [0, 6, 8, 11, 12, 13], "true": [0, 6, 8], "gnn_spmm": [0, 5], "composit": 0, "multi": [0, 3, 8], "network": [0, 3, 6], "jointli": 0, "emb": 0, "both": 0, "initi": [0, 3, 6, 8, 13], "ent_emb": [0, 3, 7, 13], "shape": [0, 3, 11, 13], "num_ent": [0, 3, 5, 6, 13], "rel_emb": [0, 3, 7, 13], "relation_embed": [0, 3, 13], "num_rel": [0, 3, 6, 13], "conv1": [0, 3], "fc": [0, 3], "full": [0, 3], "connect": [0, 3], "bn0": [0, 3], "batch": [0, 3, 6, 7, 8, 13], "normal": [0, 3, 5, 6, 8, 9], "bn1": [0, 3], "bn2": [0, 3], "inp_drop": [0, 3], "dropout": [0, 3], "hid_drop": [0, 3], "feg_drop": [0, 3], "idx": [0, 6, 7], "norm": [0, 3, 5, 6], "phase": [0, 3, 13], "knowledg": [0, 1, 3, 13], "record": [0, 6, 8, 13], "dgl": [0, 6, 11], "id": [0, 3, 6, 7, 13], "sampl": [0, 3, 5, 6, 7, 8, 9, 11, 13], "h": [0, 3, 6, 9, 11, 13], "batch_siz": [0, 3, 5, 6, 7, 13], "3": [0, 2, 3, 8, 13], "get_scor": [0, 3, 13], "mode": [0, 3, 6, 7, 8, 11, 13], "test": [0, 3, 6, 7, 8, 11, 13], "A": [0, 3, 6, 8, 11, 13], "choos": [0, 3, 8, 13], "head": [0, 3, 6, 7, 13], "predict": [0, 3, 6, 7, 8, 13], "tail": [0, 3, 6, 7, 13], "concat": [0, 3, 6], "compgcncov": [0, 5], "in_channel": 0, "out_channel": 0, "act": 0, "lambda": [0, 3], "bia": [0, 3], "drop_rat": 0, "opn": 0, "corr": 0, "comp": 0, "similar": [0, 8], "http": [0, 2, 6, 8], "github": [0, 2], "com": [0, 2], "malllabiisc": 0, "get_param": [0, 5, 11], "edgebatch": 0, "reduce_func": 0, "nodebatch": 0, "edge_data": 0, "x": [0, 6, 8], "rel_repr": 0, "edge_typ": 0, "edge_norm": [0, 6], "rel_emb_dim": 0, "gnn": [0, 6], "basiclay": 0, "inp_dim": 0, "has_attn": 0, "attent": 0, "mechan": 0, "attn_rel_emb": 0, "attn_rel_emb_dim": 0, "build": [0, 3, 6], "basic": 0, "accord": 0, "rela": [0, 6], "get": [0, 3, 6, 7, 8, 13], "ndata": 0, "pop": 0, "relattgraphconv": [0, 5], "out_dim": 0, "num_bas": 0, "1": [0, 6, 8, 9, 11, 12, 13], "activ": [0, 2], "edge_dropout": 0, "is_input_lay": 0, "fals": [0, 6, 8, 11], "relgraphconv": [0, 5], "weight": [0, 3, 6, 9], "w_comp": 0, "self_loop_weight": 0, "self": [0, 6, 8, 9, 13], "loop": 0, "propag": [0, 8, 9], "travers": 0, "order": [0, 3, 6, 8], "updat": [0, 6, 8, 13], "represent": [0, 1, 3, 13], "learn": [0, 1, 3, 6, 8, 13], "introduc": [0, 3], "neighbor": [0, 6, 11], "init_gat_emb": 0, "gat": 0, "ent_emb_out": 0, "rel_emb_out": 0, "entity_embed": 0, "final": [0, 3, 8], "convkb": 0, "out_att": 0, "init_convkb_emb": 0, "conv_lay": 0, "relu": 0, "fc_layer": 0, "adj_matrix": [0, 5, 6], "n_hop": [0, 5, 6], "indic": [0, 3, 8, 11, 13], "when": [0, 3, 6, 8, 13], "mean": [0, 3, 6, 13], "attet": 0, "param": [0, 3, 6, 8, 11], "forward_con": 0, "forward_gat": 0, "cal_con_scor": 0, "head_emb": [0, 3, 13], "rela_emb": [0, 3], "tail_emb": [0, 3, 13], "cal_gat_scor": 0, "trans": [0, 5, 11, 12], "specialspmmfunctionfin": [0, 5], "special": 0, "onli": [0, 6, 8], "region": 0, "backpropataion": 0, "arxiv": [0, 8], "org": [0, 8], "ab": [0, 8], "1710": 0, "10903": 0, "edge_w": 0, "n": [0, 2, 9], "out_featur": [0, 3], "specialspmmfin": [0, 5], "spmm": 0, "graphattentionlay": [0, 5], "num_nod": 0, "in_featur": [0, 3], "nrela_dim": 0, "alpha": 0, "version": [0, 6], "edge_emb": 0, "edge_list_nhop": 0, "edge_embed_nhop": 0, "meta": [0, 6, 8], "transfer": [0, 3], "produc": [0, 8], "ent_init": 0, "init": 0, "kgemodel": [0, 5, 10], "kge": [0, 6, 13], "singl": [0, 3, 6, 8, 13], "triplet": [0, 6], "neg": [0, 3, 6, 7, 9, 13], "replac": [0, 3, 6, 13], "get_intest_train_g": 0, "indtest_train_g": 0, "get_ent_emb": 0, "sup_g_bidir": 0, "undirect": [0, 6], "support": [0, 8], "includ": [0, 1, 6, 8], "posit": [0, 6, 7, 9], "etc": [0, 6, 9], "get_num_rel": 0, "entinit": [0, 5], "rel_head_emb": 0, "rel_tail_emb": 0, "g_bidir": 0, "relmorsgraphconv": [0, 5], "current": [0, 8], "msg": 0, "coeffici": 0, "apply_node_func": 0, "node_repr": 0, "task": [0, 6, 7, 8], "model_nam": [0, 7], "name": [0, 6, 8, 11], "nrelat": 0, "epsilon": [0, 3, 13], "embedding_rang": [0, 3, 13], "margin": [0, 3, 13], "loss": [0, 1, 3, 5, 8, 13], "uniform": [0, 3, 13], "distribut": [0, 3, 6, 13], "rang": [0, 3, 13], "In": [0, 6, 8, 9], "consist": 0, "two": [0, 3, 8, 13], "part": 0, "usual": 0, "And": [0, 6], "second": [0, 8], "becaus": 0, "share": 0, "element": [0, 8], "gcn": 0, "framework": 0, "ent": 0, "rel": [0, 6, 11], "entitii": 0, "default": [0, 3, 6, 8, 13], "tri2emb": [0, 3, 13], "respect": [0, 3, 13], "three": [0, 3, 13], "str": [0, 3, 6, 11, 13], "option": [0, 3, 6, 8, 13], "": [0, 1, 6, 8, 11], "identifi": 0, "last": [0, 8], "in_feat": 0, "out_feat": 0, "regular": [0, 3, 9], "self_loop": 0, "layer_norm": 0, "etyp": 0, "presort": 0, "fulli": 0, "complet": [0, 3], "directli": [0, 2, 11], "make": [0, 6], "pattern": [0, 3, 6], "new": [0, 3, 13], "techniqu": 0, "transform": [0, 6], "prune": 0, "relationawar": 0, "neighborhood": [0, 6], "address": [0, 3], "empti": 0, "conc": 0, "appli": [0, 3], "awar": [0, 3], "2": [0, 3, 6, 8, 9, 13], "hop": [0, 6], "aggregateconv": 0, "u_nod": 0, "v_node": 0, "num_edg": 0, "aggr_flag": 0, "is_drop": 0, "agg_flag": 0, "disclos": [0, 6], "drop": 0, "mask": [0, 6], "rel_neighbor_embd": 0, "enclos": [0, 6, 11], "socor": 0, "sparse_dense_mul": 0, "d": [0, 8], "sparse_index_select": 0, "h_id": 0, "r_id": 0, "kg": [0, 6, 7, 8, 9, 13], "match": [0, 6], "queri": 0, "answer": 0, "b": [0, 3], "n_ent": 0, "aggragate_emb": 0, "complay": [0, 5], "nodelay": [0, 5], "edgelay": [0, 5], "infomax": 0, "link": [0, 3, 6, 7, 11], "suffici": 0, "exploit": 0, "relationsfrom": 0, "aspect": 0, "mutual": 0, "inform": [0, 3], "mi": 0, "maxim": 0, "ent_pad": 0, "pad": 0, "sem_dim": 0, "w_rel2ent": 0, "init_ent_emb_matrix": 0, "form": [0, 3, 13], "comp_ht_emb": 0, "combin": 0, "ht_emb": [0, 3], "comp_hrt_emb": 0, "hrt_emb": 0, "nei_rel_path": 0, "rel_label": 0, "r_emb_out": 0, "path": [0, 6], "consid": 0, "get_logit": 0, "s_g": 0, "s_g_po": 0, "s_g_cor": 0, "is_return_emb": 0, "cor_graph": 0, "level": 0, "corrupt": 0, "representaion": 0, "global": 0, "relcompgraphconv": [0, 5], "discrimin": [0, 5], "n_e": 0, "n_g": 0, "weights_init": 0, "m": 0, "c": 0, "h_pl": 0, "h_mi": 0, "s_bias1": 0, "s_bias2": 0, "For": [0, 6], "sc_1": 0, "sc_2": 0, "explain": 0, "lifestyl": 0, "commerc": 0, "cacul": [0, 3, 13], "score_func": [0, 3, 13], "transe_func": 0, "welcom": 1, "python": [1, 2, 11], "librari": 1, "standard": 1, "process": [1, 6, 8, 13], "rich": 1, "exist": [1, 6, 7], "method": [1, 6, 8, 12], "decoupl": 1, "comprehens": 1, "evalu": [1, 6, 7, 8, 11], "metric": [1, 6, 8, 11], "we": [1, 3], "provid": [1, 3], "beginn": 1, "instal": 1, "subpackag": [], "virtual": 2, "recommend": [2, 6], "anaconda": 2, "conda": 2, "neuralkg": [2, 12], "ind": [2, 11, 12], "8": [2, 3], "git": 2, "clone": 2, "zjukg": 2, "cd": 2, "setup": [2, 5, 6], "py": 2, "pip": 2, "tenosr": [3, 13], "eval": [3, 8, 13], "translat": 3, "_": [3, 6, 9], "relationship": 3, "space": 3, "gamma": [3, 9], "_f": 3, "score_embed": 3, "mapping_embed": 3, "map": [3, 11], "hyperplan": 3, "from": [3, 6, 8, 11, 13], "specif": [3, 8], "its": [3, 8], "inabl": 3, "norm_vector": 3, "project": 3, "d_r": 3, "p": 3, "same": [3, 6, 8], "bump": 3, "super": 3, "rectangl": 3, "ariti": [3, 13], "maximum": [3, 6], "ari": 3, "distanc": 3, "calc_scor": 3, "box_low": 3, "box_hig": 3, "lower": 3, "boundari": 3, "upper": 3, "dist": 3, "lb": 3, "ub": 3, "invers": [3, 6], "correl": 3, "maintain": 3, "low": 3, "insid": 3, "larg": 3, "keep": 3, "point": 3, "linearli": 3, "penal": 3, "outsid": 3, "larger": 3, "more": [3, 6], "sever": 3, "math": [3, 6, 9], "operatornam": 3, "re": [3, 13], "left": [3, 6, 9], "op": 3, "diag": 3, "overlin": 3, "ight": [3, 6, 9], "2d": 3, "layer": [3, 5], "emb_ent": 3, "emb_rel": 3, "choose_emb": 3, "ar": [3, 6, 8, 12], "reshap": 3, "concaten": 3, "result": [3, 6, 7, 8], "vectoris": 3, "k": 3, "dimension": [3, 11], "tail_predict": [3, 5, 7], "explan": 3, "simul": 3, "crossov": 3, "bi": 3, "effect": 3, "select": [3, 6, 13], "rel_reverse_emb": 3, "revers": [3, 6], "h_weighted_vector": 3, "t_weighted_vector": 3, "hr_bia": 3, "tr_bia": 3, "weighted_vector": 3, "sigma": 3, "tanh": 3, "c_r": 3, "circ": 3, "hr_score": 3, "tr_score": 3, "simultan": 3, "regularize_loss": 3, "add": [3, 6, 8, 13], "infer": 3, "quaternion": 3, "init_weight": 3, "oldsymbol": [3, 9], "q": [3, 9], "_h": 3, "otim": 3, "_r": 3, "diamond": 3, "_t": 3, "regul_1": 3, "regul_2": 3, "quaternion_init": 3, "criterion": 3, "he": 3, "scheme": 3, "four": 3, "dataset": [3, 5, 6, 8, 13], "random": [3, 6], "might": [3, 6, 8], "case": [3, 6, 8], "fewer": 3, "epoch": [3, 8, 11, 13], "hierarchi": 3, "polar": 3, "coordin": 3, "system": 3, "phase_weight": 3, "modules_weight": 3, "modulu": 3, "h_m": 3, "r_m": 3, "t_m": 3, "_2": [3, 9], "sin": 3, "h_p": 3, "r_p": 3, "t_p": 3, "_1": 3, "via": 3, "pair": [3, 6], "vector": [3, 11], "simple": 3, "present": [3, 8], "enhanc": 3, "cp": 3, "allow": 3, "depend": 3, "ent_h_emb": 3, "ent_t_emb": 3, "rel_inv_emb": 3, "hh_emb": 3, "tt_emb": 3, "th_emb": 3, "l2_loss": 3, "get_emb": 3, "separ": 3, "transfer_matrix": 3, "m_": 3, "r_r": 3, "e_t": 3, "datapreprocess": 5, "kgdata": [5, 6], "ent2id": [5, 6], "rel2id": [5, 6, 13], "id2ent": [5, 6], "id2rel": [5, 6], "train_tripl": [5, 6, 13], "valid_tripl": [5, 6], "test_tripl": [5, 6], "all_true_tripl": [5, 6], "traintripl": [5, 6], "relation2tupl": [5, 6], "relsub2obj": [5, 6], "hr2t_train": [5, 6], "rt2h_train": [5, 6], "h2rt_train": [5, 6], "t2rh_train": [5, 6], "get_id": [5, 6], "get_triples_id": [5, 6], "get_hr2t_rt2h_from_train": [5, 6], "count_frequ": [5, 6], "get_h2rt_t2hr_from_train": [5, 6], "get_hr_trian": [5, 6], "grdata": [5, 6], "db_name_po": [5, 6], "db_name_neg": [5, 6], "m_h2r": [5, 6], "m_t2r": [5, 6], "ssp_graph": [5, 6], "load_data_grail": [5, 6, 11], "load_ind_data_grail": [5, 6, 11], "generate_train": [5, 6], "generate_valid": [5, 6], "prepare_subgraph": [5, 6], "prepare_features_new": [5, 6], "metatraingrdata": [5, 6], "subgraphs_db": [5, 6], "metavalidgrdata": [5, 6], "kgeevaldata": [5, 6], "hr2t": [5, 6], "rt2h": [5, 6], "num_cand": [5, 6], "get_label": [5, 6], "collate_fn": [5, 6], "basesampl": [5, 6], "corrupt_head": [5, 6], "corrupt_tail": [5, 6], "head_batch": [5, 6], "tail_batch": [5, 6], "get_train": [5, 6], "get_valid": [5, 6], "get_test": [5, 6], "get_all_true_tripl": [5, 6], "revsampl": [5, 6], "add_reverse_rel": [5, 6], "add_reverse_tripl": [5, 6], "basegraph": [5, 6], "generate_ind_test": [5, 6], "load_data_grail_ind": [5, 6], "get_neg_samples_replacing_head_tail": [5, 6], "basemeta": [5, 6], "ground": 5, "groundallrul": [5, 6], "propositionalizerul": [5, 6], "readdata": [5, 6], "groundrul": [5, 6], "kgdatamodul": 5, "get_data_config": [5, 6], "prepare_data": [5, 6], "get_train_b": [5, 6], "train_dataload": [5, 6], "val_dataload": [5, 6], "test_dataload": [5, 6], "ruledataload": 5, "ruledataset": [5, 6], "num_work": [5, 6], "pin_memori": [5, 6], "drop_last": [5, 6], "timeout": [5, 6], "sampler": 5, "prefetch_factor": [5, 6], "subsampl": [5, 6], "get_sampling_kei": [5, 6], "rmpisampl": [5, 6], "unisampl": [5, 6], "cross_sampling_flag": [5, 6], "uni_sampl": [5, 6], "bernsampl": [5, 6], "lef_mean": [5, 6], "rig_mean": [5, 6], "calc_bern": [5, 6], "sampling_kei": [5, 6], "advsampl": [5, 6], "calc_freq": [5, 6], "allsampl": [5, 6], "crossesampl": [5, 6], "init_label": [5, 6], "convsampl": [5, 6], "xtransesampl": [5, 6], "neg_sampl": [5, 6], "h_neighbor": [5, 6], "h_mask": [5, 6], "max_neighbor": [5, 6], "graphsampl": [5, 6], "sampling_neg": [5, 6], "build_graph": [5, 6], "comp_deg_norm": [5, 6], "node_norm_to_edge_norm": [5, 6], "sampling_posit": [5, 6], "kbatsampl": [5, 6], "neighbour": [5, 6], "triples_gat_po": [5, 6], "triples_gat_neg": [5, 6], "triples_con": [5, 6], "bf": [5, 6, 11], "get_neighbor": [5, 6, 11], "get_unique_ent": [5, 6], "get_batch_nhop_neighbors_al": [5, 6], "sam_neg": [5, 6], "compgcnsampl": [5, 6], "testsampl": [5, 6], "hr2t_all": [5, 6], "rt2h_all": [5, 6], "get_hr2t_rt2h_from_al": [5, 6], "validsampl": [5, 6], "validrmpisampl": [5, 6], "testsampler_hit": [5, 6], "get_subgraph": [5, 6], "prepare_featur": [5, 6], "testrmpisampler_hit": [5, 6], "testsampler_auc": [5, 6], "testrmpisampler_auc": [5, 6], "metasampl": [5, 6], "validmetasampl": [5, 6], "testmetasampler_hit": [5, 6], "testmetasampler_auc": [5, 6], "graphtestsampl": [5, 6], "compgcntestsampl": [5, 6], "segnntrainprocess": [5, 6], "get_onehot_label": [5, 6], "get_sampl": [5, 6], "construct_kg": [5, 6], "segnntrainsampl": [5, 6], "segnntestsampl": [5, 6], "kgdataset": [5, 6], "base_data_modul": 5, "config": [5, 6, 8], "basedatamodul": [5, 6], "add_to_argpars": [5, 6, 8], "get_config": [5, 6], "eval_task": [1, 5], "link_predict": 5, "ind_predict": [5, 7], "head_predict": [5, 7], "calc_rank": [5, 7], "link_predict_segnn": [5, 7], "head_predict_segnn": [5, 7], "tail_predict_segnn": [5, 7], "calc_ranks_segnn": [5, 7], "triple_classif": 5, "classif": [5, 6, 7], "lit_model": [1, 5], "baselitmodel": 5, "configure_optim": [5, 8], "training_step": [5, 8], "validation_step": [5, 6, 8], "test_step": [5, 6, 8], "get_result": [5, 8], "get_auc": [5, 8], "kgelitmodel": 5, "validation_epoch_end": [5, 8], "test_epoch_end": [5, 8], "use_amp": [5, 8], "precis": [5, 8], "prepare_data_per_nod": [5, 8], "allow_zero_length_dataloader_with_multiple_devic": [5, 8], "indgnnlitmodel": 5, "compgcnlitmodel": 5, "convelitmodel": 5, "crosselitmodel": 5, "iterelitmodel": 5, "training_epoch_end": [5, 8], "update_axiom": [5, 8], "kbatlitmodel": 5, "metagnnlitmodel": 5, "rgcnlitmodel": 5, "rugelitmodel": 5, "segnnlitmodel": 5, "get_kg": [5, 8], "snrilitmodel": 5, "xtranselitmodel": 5, "adv_loss": 5, "model": [1, 5, 6, 7, 8, 9, 11, 12], "complex_nne_aer_loss": 5, "crosse_loss": 5, "cross_entropy_loss": 5, "kbat_loss": 5, "logsig_loss": 5, "margin_loss": 5, "rgcn_loss": 5, "reg_loss": [5, 9], "ruge_loss": 5, "simple_loss": 5, "softplus_loss": 5, "transh": 5, "box": 5, "complex": [5, 13], "conv": 5, "cross": [5, 6], "distmult": [5, 13], "dual": [5, 9], "hake": 5, "pairr": 5, "rotat": [5, 12], "simpl": [5, 13], "transr": 5, "rulemodel": [5, 10], "complex_nne_a": 5, "iter": 5, "ruge": 5, "gnnmodel": [5, 10], "compil": [5, 12], "compgcn": 5, "grail": [5, 12], "rgcn": 5, "kbat": 5, "mors": [5, 12], "rmpi": [5, 6, 12], "segnn": 5, "snri": [5, 12], "xtrans": 5, "util": [1, 5, 6, 8], "setup_pars": 5, "tool": 5, "import_class": [5, 11], "save_config": [5, 11], "load_config": [5, 11], "deseri": [5, 11], "deserialize_rmpi": [5, 11], "set_logg": [5, 11], "log_metr": [5, 11], "log_step_metr": [5, 11], "override_config": [5, 11], "reidx_withr_and": [5, 11], "reidx": [5, 11], "reidx_withr": [5, 11], "data2pkl": [5, 11], "gen_subgraph_dataset": [5, 11], "get_average_subgraph_s": [5, 11], "serial": [5, 11], "sample_neg": [5, 11], "get_edge_count": [5, 11], "intialize_work": [5, 11], "extract_save_subgraph": [5, 11], "links2subgraph": [5, 11], "subgraph_extraction_label": [5, 11], "node_label": [5, 6, 11], "remove_nod": [5, 11], "get_neighbor_nod": [5, 11], "incidence_matrix": [5, 11], "bfs_relat": [5, 11], "sp_row_vec_from_idx_list": [5, 11], "ssp_multigraph_to_dgl": [5, 11], "gen_meta_subgraph_dataset": [5, 11], "sample_one_subgraph": [5, 11], "get_average_meta_subgraph_s": [5, 11], "get_g": [5, 11], "get_g_bidir": [5, 11], "get_hr2t_rt2h": [5, 11], "get_hr2t_rt2h_sup_qu": [5, 11], "get_indtest_test_dataset_and_train_g": [5, 11], "object": [6, 8], "preprocess": 6, "some": [6, 8, 9, 12], "pre": [6, 9], "set": [6, 8, 9, 11], "encod": [6, 8], "dict": [6, 8], "decod": [6, 8], "realtion": 6, "list": [6, 8, 11], "valid": [6, 7, 8, 11, 13], "defaultdict": 6, "format": 6, "numpi": 6, "start": 6, "4": 6, "frequenc": [6, 8], "partial": 6, "like": [6, 8], "word2vec": 6, "count": 6, "h2rt": 6, "t2hr": 6, "chang": 6, "gener": [6, 8, 13], "merg": 6, "1vsn": 6, "hr": 6, "databas": 6, "ndarrai": 6, "signedinteg": 6, "collect": 6, "csc_matrix": 6, "dglheterograph": 6, "load": 6, "adj_list": [6, 11], "ent2idx": 6, "train_ent2idx": 6, "train_rel2idx": 6, "train_idx2": 6, "train_idx2rel": 6, "h2r": 6, "t2r": 6, "r_label": 6, "n_label": 6, "characterist": 6, "after": [6, 8, 13], "prepar": 6, "extract": [6, 11], "eval_tripl": 6, "int": [6, 8, 13], "raltion": 6, "candid": 6, "true_tail": 6, "true_head": 6, "filter": [6, 7], "y_head": 6, "y_tail": 6, "tradit": 6, "num_max": 6, "out": [6, 8], "neg_siz": 6, "ad": [6, 13], "all_ture_tripl": 6, "neg_triplet": 6, "dgl_adj_list": 6, "test_link": 6, "num_sampl": 6, "50": [6, 7], "relac": 6, "fnentityidmap": 6, "fnrelationidmap": 6, "fntrainingtripl": 6, "fnruletyp": 6, "fnoutput": 6, "datamodul": 6, "pytorch": [6, 8], "lightn": [6, 8], "readthedoc": 6, "io": 6, "en": 6, "stabl": 6, "html": 6, "import": [6, 11], "instanti": 6, "do": [6, 8], "thing": [6, 8], "write": [6, 11], "disk": 6, "done": 6, "gpu": [6, 8], "so": [6, 8], "don": [6, 8], "state": [6, 8], "y": [6, 8], "stage": 6, "split": [6, 8, 11, 13], "val": [6, 8], "dim": [6, 7, 8, 11, 13], "assign": 6, "torch": [6, 8], "data_train": 6, "data_v": 6, "data_test": 6, "num_batch": 6, "isn": 6, "zero": 6, "divid": 6, "user": 6, "give": 6, "rais": 6, "valueerror": 6, "train_b": 6, "implement": [6, 8], "dataload": [6, 8], "specifi": [6, 8], "multipl": [6, 8], "pleas": 6, "see": [6, 8], "page": 6, "reload": 6, "unless": 6, "paramref": [6, 8], "pytorch_lightn": [6, 8], "trainer": [6, 8, 11], "reload_dataloaders_every_n_epoch": 6, "integ": [6, 8], "download": 6, "howev": 6, "abov": [6, 8], "necessari": 6, "fit": [6, 8], "correct": [6, 9], "hardwar": 6, "There": [6, 8, 12], "yourself": 6, "exampl": [6, 8], "def": [6, 8], "compos": 6, "totensor": 6, "5": [6, 8, 12], "mnist": 6, "root": [6, 11], "loader": 6, "shuffl": 6, "cifar": 6, "mnist_load": 6, "cifar_load": 6, "batch_mnist": 6, "batch_cifar": 6, "happen": 6, "sequenc": 6, "loader_a": 6, "loader_b": 6, "loader_n": 6, "where": 6, "dataloader_idx": [6, 8], "here": [6, 8], "postiv": 6, "t_co": 6, "float": 6, "batch_data": 6, "randomli": 6, "flag": 6, "bernoulli": 6, "adversari": [6, 9], "pleft": [6, 9], "h_": [6, 9], "j": 6, "prime": [6, 9], "t_": [6, 9], "midleft": 6, "r_": 6, "rac": 6, "exp": [6, 9], "lpha": 6, "f_": 6, "mathbf": [6, 9], "sum_": [6, 9], "freq_hr": 6, "freq_tr": 6, "pos_sampl": 6, "taken": 6, "\u4e00\u4e2a\u6837\u672c\u540c\u65f6\u505ahead": 6, "row": 6, "treat": 6, "pos_hr_t": 6, "entit": 6, "tag": 6, "effecitv": 6, "neural": 6, "pos_tripl": 6, "num_neg": 6, "without": [6, 8], "negtiv": 6, "power": 6, "index": [6, 8], "node_norm": 6, "positive_tripl": 6, "regener": 6, "invis": 6, "adjac": [6, 11], "nbd_size": 6, "depth": 6, "search": 6, "algorithm": [6, 8], "arrai": 6, "mrr": [6, 8, 12], "hit": [6, 8, 12], "10": [6, 8, 12, 13], "all_link": 6, "max_node_label_valu": [6, 11], "max": 6, "max_n_label": 6, "n_feat": [6, 11], "One": 6, "hot": 6, "n_featsur": 6, "sting": 6, "auc": [6, 8, 12], "auc_pr": [6, 8], "construct": 6, "se": 6, "comut": 6, "lightningdatamodul": 6, "parser": [6, 8], "incomplet": 7, "predicion": 7, "rank": 7, "pred_scor": 7, "calc": 7, "filter_label": 7, "namespac": 8, "src_list": 8, "dst_list": 8, "rel_list": 8, "lightningmodul": 8, "what": 8, "optim": 8, "rate": 8, "schedul": 8, "your": 8, "But": 8, "gan": 8, "6": 8, "lr": 8, "lr_scheduler_config": 8, "dictionari": 8, "kei": 8, "lr_schedul": 8, "whose": 8, "describ": 8, "contain": 8, "associ": 8, "shown": 8, "below": 8, "unit": 8, "step": [8, 11], "could": 8, "end": [8, 9, 13], "wherea": 8, "interv": 8, "how": 8, "monitor": 8, "reducelronplateau": 8, "val_loss": 8, "enforc": 8, "avail": 8, "thu": 8, "stop": 8, "found": 8, "warn": 8, "strict": 8, "learningratemonitor": 8, "callback": 8, "progress": 8, "keyword": 8, "custom": 8, "log": [8, 9, 11], "condit": 8, "adam": 8, "metric_to_track": 8, "often": 8, "refer": 8, "check_val_every_n_epoch": 8, "optimizer1": 8, "optimizer2": 8, "sgd": 8, "scheduler1": 8, "scheduler2": 8, "lambdalr": 8, "made": 8, "simpli": 8, "metric_v": 8, "along": 8, "sequenti": 8, "differ": 8, "mention": 8, "optimizer_on": 8, "01": 8, "optimizer_two": 8, "next": 8, "cycl": 8, "continu": 8, "being": 8, "most": 8, "1e": 8, "gen_opt": 8, "model_gen": 8, "dis_opt": 8, "model_di": 8, "02": 8, "dis_sch": 8, "cosineann": 8, "t_max": 8, "own": 8, "gen_sch": 8, "exponentiallr": 8, "99": 8, "procedur": 8, "improv": [8, 13], "wasserstein": 8, "1704": 8, "00028": 8, "n_critic": 8, "know": 8, "16": 8, "bit": 8, "automat": 8, "handl": 8, "addit": 8, "optimizer_idx": 8, "lbfg": 8, "closur": 8, "control": 8, "those": 8, "overrid": [8, 11], "optimizer_step": 8, "nn": 8, "whatev": 8, "decid": 8, "possibl": 8, "batch_idx": 8, "bar": 8, "logger": 8, "displai": 8, "core": 8, "truncated_bptt_step": 8, "skip": 8, "tpu": 8, "ipu": 8, "deepspe": 8, "fancier": 8, "someth": 8, "z": 8, "truncat": 8, "back": [8, 9], "time": 8, "previou": 8, "backprop": 8, "lstm": 8, "smooth": 8, "averag": 8, "actual": 8, "anyth": 8, "interest": 8, "accuraci": 8, "pseudocod": 8, "val_out": 8, "val_batch": 8, "val_data": 8, "append": 8, "validation_step_end": 8, "imag": 8, "text": 8, "sample_img": 8, "grid": 8, "torchvis": 8, "make_grid": 8, "experi": 8, "add_imag": 8, "example_imag": 8, "acc": 8, "labels_hat": 8, "argmax": 8, "val_acc": 8, "sum": 8, "item": 8, "len": 8, "log_dict": 8, "tell": 8, "been": 8, "put": 8, "disabl": 8, "At": 8, "goe": 8, "enabl": 8, "test_out": 8, "test_batch": 8, "test_data": 8, "test_acc": 8, "test_loss": 8, "summar": 8, "dict_kei": 8, "evalutaion": 8, "didn": 8, "won": 8, "With": 8, "val_step_output": 8, "outer": 8, "entri": 8, "per": 8, "inner": 8, "individu": 8, "dataloader_output_result": 8, "dataloader_out": 8, "dataloader_i_output": 8, "final_metr": 8, "final_valu": 8, "test_step_end": 8, "all_test_pr": 8, "test_step_output": 8, "some_result": 8, "calc_all_result": 8, "dataloader_output": 8, "test_step_out": 8, "optim_dict": 8, "train_out": 8, "train_batch": 8, "train_data": 8, "training_step_output": 8, "temperatur": 9, "pos_scor": 9, "neg_scor": 9, "subsampling_weight": 9, "l": 9, "sigmaleft": 9, "d_": 9, "pred": 9, "rule": [9, 13], "confid": [9, 13], "triple_num": 9, "pos_len": 9, "softplu": 9, "egin": 9, "align": 9, "omega": 9, "cup": 9, "y_": 9, "phi": 9, "lambda_1": 9, "lambda_2": 9, "up": 11, "argumentpars": 11, "module_and_class_nam": 11, "config_path": 11, "checkpoint": 11, "consol": 11, "print": 11, "check_per_step": 11, "tri": 11, "rel_reidx": 11, "ent_reidx": 11, "dataset_nam": 11, "pickl": 11, "saved_relation2id": 11, "max_label_valu": 11, "add_traspose_rel": 11, "sample_s": 11, "num_neg_samples_per_link": 11, "max_siz": 11, "1000000": 11, "constrained_neg_prob": 11, "args_": 11, "db": 11, "a_list": 11, "enclosing_sub_graph": 11, "max_nodes_per_hop": 11, "max_dist": 11, "enclosing_flag": 11, "a_incid": 11, "adj": 11, "matric": [11, 13], "modifi": 11, "contrib": 11, "knowledge_graph": 11, "accomod": 11, "copi": 11, "idx_list": 11, "creat": 11, "convert": 11, "ssp": 11, "multigraph": 11, "bg_train_g": 11, "tri_list": 11, "sup_tri": 11, "que_tri": 11, "reproduc": 12, "pr": 12, "752": 12, "821": 12, "452": 12, "359": 12, "561": 12, "624": 12, "800": 12, "835": 12, "516": 12, "437": 12, "600": 12, "668": 12, "815": 12, "833": 12, "495": 12, "390": 12, "720": 12, "803": 12, "823": 12, "532": 12, "451": 12, "620": 12, "689": 12, "844": 12, "847": 12, "591": 12, "470": 12, "723": 12, "873": 12, "900": 12, "642": 12, "539": 12, "767": 12, "831": 12, "876": 12, "905": 12, "617": 12, "509": 12, "741": 12, "813": 12, "884": 12, "906": 12, "646": 12, "536": 12, "781": 12, "857": 12, "851": 12, "882": 12, "632": 12, "523": 12, "763": 12, "830": 12, "964": 12, "960": 12, "754": 12, "643": 12, "897": 12, "950": 12, "871": 12, "899": 12, "637": 12, "530": 12, "765": 12, "828": 12, "925": 12, "670": 12, "568": 12, "796": 12, "859": 12, "870": 12, "525": 12, "775": 12, "866": 12, "662": 12, "569": 12, "827": 12, "959": 12, "952": 12, "745": 12, "878": 12, "954": 12, "911": 12, "921": 12, "639": 12, "521": 12, "797": 12, "880": 12, "927": 12, "932": 12, "704": 12, "604": 12, "894": 12, "908": 12, "681": 12, "573": 12, "916": 12, "647": 12, "535": 12, "787": 12, "963": 12, "742": 12, "888": 12, "958": 12, "constraint": 13, "nne_aer": 13, "examin": 13, "approxim": 13, "entail": 13, "get_rul": 13, "rule_bas": 13, "complex_nn": 13, "_con": 13, "txt": 13, "file": 13, "rule_p": 13, "rule_q": 13, "wr": 13, "o": 13, "train_sampl": 13, "test_sampl": 13, "www": 13, "19": 13, "get_axiom": 13, "update_train_tripl": 13, "update_p": 13, "axiom": 13, "updated_train_data": 13, "split_embed": 13, "splite": 13, "similr": 13, "probabl": 13, "sim": 13, "run_axiom_prob": 13, "probal": 13, "pool": 13, "update_valid_axiom": 13, "high": 13, "generate_new_train_tripl": 13, "updata": 13, "guidanc": 13, "soft": 13, "novel": 13, "paradigm": 13, "934": 12, "935": 12, "777": 12, "726": 12, "840": 12, "939": 12, "944": 12, "782": 12, "736": 12, "834": 12, "839": 12, "885": 12, "914": 12, "806": 12, "766": 12, "843": 12, "941": 12, "703": 12, "890": 12, "895": 12, "922": 12, "628": 12, "819": 12, "929": 12, "940": 12, "776": 12, "814": 12, "942": 12, "759": 12, "919": 12, "788": 12, "842": 12, "855": 12, "930": 12, "757": 12, "699": 12, "811": 12, "824": 12, "909": 12, "694": 12, "746": 12, "804": 12, "858": 12, "869": 12, "549": 12, "497": 12, "605": 12, "631": 12, "845": 12, "862": 12, "542": 12, "490": 12, "595": 12, "619": 12, "822": 12, "567": 12, "501": 12, "685": 12, "872": 12, "606": 12, "537": 12, "663": 12, "713": 12, "770": 12, "519": 12, "428": 12, "936": 12, "760": 12, "747": 12, "931": 12, "751": 12, "732": 12, "762": 12, "772": 12, "735": 12, "816": 12, "933": 12, "707": 12, "783": 12, "810": 12, "903": 12, "923": 12, "660": 12, "597": 12, "721": 12, "750": 12, "467": 12, "395": 12, "515": 12, "575": 12, "780": 12, "506": 12, "455": 12, "510": 12, "585": 12, "739": 12, "475": 12, "545": 12, "722": 12, "465": 12, "409": 12, "514": 12, "683": 12, "291": 12, "189": 12, "354": 12, "550": 12, "947": 12, "928": 12, "778": 12, "676": 12, "864": 12, "630": 12, "507": 12, "774": 12, "863": 12, "926": 12, "657": 12, "861": 12, "874": 12, "554": 12, "402": 12, "740": 12, "943": 12, "938": 12, "744": 12, "907": 12, "920": 12, "887": 12, "623": 12, "486": 12, "918": 12, "924": 12, "785": 12, "904": 12, "626": 12, "841": 12, "912": 12, "574": 12, "674": 12, "629": 12, "527": 12, "791": 12, "498": 12, "477": 12, "367": 12, "251": 12, "566": 12, "435": 12, "261": 12, "675": 12, "801": 12}, "objects": {"neuralkg_ind.data": [[6, 0, 0, "-", "DataPreprocess"], [6, 0, 0, "-", "Grounding"], [6, 0, 0, "-", "KGDataModule"], [6, 0, 0, "-", "RuleDataLoader"], [6, 0, 0, "-", "Sampler"], [6, 0, 0, "-", "base_data_module"]], "neuralkg_ind.data.DataPreprocess": [[6, 1, 1, "", "BaseGraph"], [6, 1, 1, "", "BaseMeta"], [6, 1, 1, "", "BaseSampler"], [6, 1, 1, "", "GRData"], [6, 1, 1, "", "KGData"], [6, 1, 1, "", "KGEEvalData"], [6, 1, 1, "", "MetaTrainGRData"], [6, 1, 1, "", "MetaValidGRData"], [6, 1, 1, "", "RevSampler"]], "neuralkg_ind.data.DataPreprocess.BaseGraph": [[6, 2, 1, "", "generate_ind_test"], [6, 2, 1, "", "get_neg_samples_replacing_head_tail"], [6, 2, 1, "", "get_test"], [6, 2, 1, "", "get_train"], [6, 2, 1, "", "get_valid"], [6, 2, 1, "", "load_data_grail_ind"]], "neuralkg_ind.data.DataPreprocess.BaseMeta": [[6, 2, 1, "", "get_test"], [6, 2, 1, "", "get_train"], [6, 2, 1, "", "get_valid"]], "neuralkg_ind.data.DataPreprocess.BaseSampler": [[6, 2, 1, "", "corrupt_head"], [6, 2, 1, "", "corrupt_tail"], [6, 2, 1, "", "get_all_true_triples"], [6, 2, 1, "", "get_test"], [6, 2, 1, "", "get_train"], [6, 2, 1, "", "get_valid"], [6, 2, 1, "", "head_batch"], [6, 2, 1, "", "tail_batch"]], "neuralkg_ind.data.DataPreprocess.GRData": [[6, 3, 1, "", "args"], [6, 3, 1, "", "db_name_neg"], [6, 3, 1, "", "db_name_pos"], [6, 2, 1, "", "generate_train"], [6, 2, 1, "", "generate_valid"], [6, 3, 1, "", "graph"], [6, 3, 1, "", "id2entity"], [6, 3, 1, "", "id2relation"], [6, 2, 1, "", "load_data_grail"], [6, 2, 1, "", "load_ind_data_grail"], [6, 3, 1, "", "m_h2r"], [6, 3, 1, "", "m_t2r"], [6, 2, 1, "", "prepare_features_new"], [6, 2, 1, "", "prepare_subgraphs"], [6, 3, 1, "", "ssp_graph"]], "neuralkg_ind.data.DataPreprocess.KGData": [[6, 3, 1, "", "RelSub2Obj"], [6, 3, 1, "", "Relation2Tuple"], [6, 3, 1, "", "TrainTriples"], [6, 3, 1, "", "all_true_triples"], [6, 3, 1, "", "args"], [6, 2, 1, "", "count_frequency"], [6, 3, 1, "", "ent2id"], [6, 2, 1, "", "get_h2rt_t2hr_from_train"], [6, 2, 1, "", "get_hr2t_rt2h_from_train"], [6, 2, 1, "", "get_hr_trian"], [6, 2, 1, "", "get_id"], [6, 2, 1, "", "get_triples_id"], [6, 3, 1, "", "h2rt_train"], [6, 3, 1, "", "hr2t_train"], [6, 3, 1, "", "id2ent"], [6, 3, 1, "", "id2rel"], [6, 3, 1, "", "rel2id"], [6, 3, 1, "", "rt2h_train"], [6, 3, 1, "", "t2rh_train"], [6, 3, 1, "", "test_triples"], [6, 3, 1, "", "train_triples"], [6, 3, 1, "", "valid_triples"]], "neuralkg_ind.data.DataPreprocess.KGEEvalData": [[6, 2, 1, "", "collate_fn"], [6, 2, 1, "", "get_label"], [6, 3, 1, "", "hr2t"], [6, 3, 1, "", "num_cand"], [6, 3, 1, "", "num_ent"], [6, 3, 1, "", "rt2h"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.DataPreprocess.MetaTrainGRData": [[6, 3, 1, "", "subgraphs_db"]], "neuralkg_ind.data.DataPreprocess.MetaValidGRData": [[6, 3, 1, "", "subgraphs_db"]], "neuralkg_ind.data.DataPreprocess.RevSampler": [[6, 2, 1, "", "add_reverse_relation"], [6, 2, 1, "", "add_reverse_triples"], [6, 2, 1, "", "corrupt_head"], [6, 2, 1, "", "corrupt_tail"], [6, 2, 1, "", "get_all_true_triples"], [6, 2, 1, "", "get_test"], [6, 2, 1, "", "get_train"], [6, 2, 1, "", "get_valid"], [6, 2, 1, "", "head_batch"], [6, 3, 1, "", "hr2t_train"], [6, 3, 1, "", "rt2h_train"], [6, 2, 1, "", "tail_batch"]], "neuralkg_ind.data.Grounding": [[6, 1, 1, "", "GroundAllRules"]], "neuralkg_ind.data.Grounding.GroundAllRules": [[6, 2, 1, "", "PropositionalizeRule"], [6, 2, 1, "", "groundRule"], [6, 2, 1, "", "readData"]], "neuralkg_ind.data.KGDataModule": [[6, 1, 1, "", "KGDataModule"]], "neuralkg_ind.data.KGDataModule.KGDataModule": [[6, 2, 1, "", "get_data_config"], [6, 2, 1, "", "get_train_bs"], [6, 2, 1, "", "prepare_data"], [6, 2, 1, "", "setup"], [6, 2, 1, "", "test_dataloader"], [6, 2, 1, "", "train_dataloader"], [6, 2, 1, "", "val_dataloader"]], "neuralkg_ind.data.RuleDataLoader": [[6, 1, 1, "", "RuleDataLoader"], [6, 1, 1, "", "RuleDataset"]], "neuralkg_ind.data.RuleDataLoader.RuleDataLoader": [[6, 3, 1, "", "batch_size"], [6, 3, 1, "", "dataset"], [6, 3, 1, "", "drop_last"], [6, 3, 1, "", "num_workers"], [6, 3, 1, "", "pin_memory"], [6, 3, 1, "", "prefetch_factor"], [6, 3, 1, "", "sampler"], [6, 3, 1, "", "timeout"]], "neuralkg_ind.data.Sampler": [[6, 1, 1, "", "AdvSampler"], [6, 1, 1, "", "AllSampler"], [6, 1, 1, "", "BernSampler"], [6, 1, 1, "", "CompGCNSampler"], [6, 1, 1, "", "CompGCNTestSampler"], [6, 1, 1, "", "ConvSampler"], [6, 1, 1, "", "CrossESampler"], [6, 1, 1, "", "GraphSampler"], [6, 1, 1, "", "GraphTestSampler"], [6, 1, 1, "", "KBATSampler"], [6, 1, 1, "", "KGDataset"], [6, 1, 1, "", "MetaSampler"], [6, 1, 1, "", "RMPISampler"], [6, 1, 1, "", "SEGNNTestSampler"], [6, 1, 1, "", "SEGNNTrainProcess"], [6, 1, 1, "", "SEGNNTrainSampler"], [6, 1, 1, "", "SubSampler"], [6, 1, 1, "", "TestMetaSampler_auc"], [6, 1, 1, "", "TestMetaSampler_hit"], [6, 1, 1, "", "TestRMPISampler_auc"], [6, 1, 1, "", "TestRMPISampler_hit"], [6, 1, 1, "", "TestSampler"], [6, 1, 1, "", "TestSampler_auc"], [6, 1, 1, "", "TestSampler_hit"], [6, 1, 1, "", "UniSampler"], [6, 1, 1, "", "ValidMetaSampler"], [6, 1, 1, "", "ValidRMPISampler"], [6, 1, 1, "", "ValidSampler"], [6, 1, 1, "", "XTransESampler"]], "neuralkg_ind.data.Sampler.AdvSampler": [[6, 2, 1, "", "calc_freq"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.AllSampler": [[6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_keys"]], "neuralkg_ind.data.Sampler.BernSampler": [[6, 2, 1, "", "calc_bern"], [6, 3, 1, "", "lef_mean"], [6, 3, 1, "", "rig_mean"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_keys"]], "neuralkg_ind.data.Sampler.CompGCNSampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "graph"], [6, 3, 1, "", "label"], [6, 2, 1, "", "node_norm_to_edge_norm"], [6, 3, 1, "", "norm"], [6, 3, 1, "", "relation"], [6, 2, 1, "", "sampling"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.Sampler.CompGCNTestSampler": [[6, 2, 1, "", "get_hr2t_rt2h_from_all"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "hr2t_all"], [6, 3, 1, "", "num_ent"], [6, 3, 1, "", "rt2h_all"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.Sampler.ConvSampler": [[6, 3, 1, "", "label"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_keys"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.Sampler.CrossESampler": [[6, 2, 1, "", "init_label"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_keys"]], "neuralkg_ind.data.Sampler.GraphSampler": [[6, 2, 1, "", "build_graph"], [6, 2, 1, "", "comp_deg_norm"], [6, 3, 1, "", "entity"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "graph"], [6, 3, 1, "", "label"], [6, 2, 1, "", "node_norm_to_edge_norm"], [6, 3, 1, "", "norm"], [6, 3, 1, "", "relation"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_negative"], [6, 2, 1, "", "sampling_positive"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.Sampler.GraphTestSampler": [[6, 2, 1, "", "get_hr2t_rt2h_from_all"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "hr2t_all"], [6, 3, 1, "", "num_ent"], [6, 3, 1, "", "rt2h_all"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.Sampler.KBATSampler": [[6, 3, 1, "", "adj_matrix"], [6, 2, 1, "", "bfs"], [6, 2, 1, "", "get_batch_nhop_neighbors_all"], [6, 2, 1, "", "get_neighbors"], [6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "get_unique_entity"], [6, 3, 1, "", "graph"], [6, 3, 1, "", "label"], [6, 3, 1, "", "n_hop"], [6, 3, 1, "", "neighbours"], [6, 2, 1, "", "sam_negative"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "sampling_negative"], [6, 3, 1, "", "triples"], [6, 3, 1, "", "triples_Con"], [6, 3, 1, "", "triples_GAT_neg"], [6, 3, 1, "", "triples_GAT_pos"]], "neuralkg_ind.data.Sampler.MetaSampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.RMPISampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.SEGNNTestSampler": [[6, 2, 1, "", "get_hr2t_rt2h_from_all"], [6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.SEGNNTrainProcess": [[6, 2, 1, "", "construct_kg"], [6, 2, 1, "", "get_h2rt_t2hr_from_train"], [6, 2, 1, "", "get_onehot_label"], [6, 2, 1, "", "get_sampling"]], "neuralkg_ind.data.Sampler.SEGNNTrainSampler": [[6, 2, 1, "", "get_test"], [6, 2, 1, "", "get_train"], [6, 2, 1, "", "get_valid"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.SubSampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestMetaSampler_auc": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestMetaSampler_hit": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestRMPISampler_auc": [[6, 3, 1, "", "args"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestRMPISampler_hit": [[6, 3, 1, "", "args"], [6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "get_subgraphs"], [6, 2, 1, "", "prepare_features"], [6, 2, 1, "", "prepare_subgraph"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestSampler": [[6, 2, 1, "", "get_hr2t_rt2h_from_all"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "hr2t_all"], [6, 3, 1, "", "num_ent"], [6, 3, 1, "", "rt2h_all"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestSampler_auc": [[6, 3, 1, "", "args"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.TestSampler_hit": [[6, 3, 1, "", "args"], [6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "get_subgraphs"], [6, 3, 1, "", "m_h2r"], [6, 3, 1, "", "m_t2r"], [6, 2, 1, "", "prepare_features"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.UniSampler": [[6, 3, 1, "", "cross_sampling_flag"], [6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"], [6, 2, 1, "", "uni_sampling"]], "neuralkg_ind.data.Sampler.ValidMetaSampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.ValidRMPISampler": [[6, 3, 1, "", "args"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.ValidSampler": [[6, 3, 1, "", "args"], [6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "sampler"], [6, 2, 1, "", "sampling"]], "neuralkg_ind.data.Sampler.XTransESampler": [[6, 2, 1, "", "get_sampling_keys"], [6, 3, 1, "", "h_mask"], [6, 3, 1, "", "h_neighbor"], [6, 3, 1, "", "max_neighbor"], [6, 3, 1, "", "neg_sample"], [6, 2, 1, "", "sampling"], [6, 3, 1, "", "triples"]], "neuralkg_ind.data.base_data_module": [[6, 1, 1, "", "BaseDataModule"], [6, 1, 1, "", "Config"]], "neuralkg_ind.data.base_data_module.BaseDataModule": [[6, 2, 1, "", "add_to_argparse"], [6, 2, 1, "", "get_config"], [6, 2, 1, "", "prepare_data"], [6, 2, 1, "", "setup"], [6, 2, 1, "", "test_dataloader"], [6, 2, 1, "", "train_dataloader"], [6, 2, 1, "", "val_dataloader"]], "neuralkg_ind.eval_task": [[7, 0, 0, "-", "link_prediction"], [7, 0, 0, "-", "triple_classification"]], "neuralkg_ind.eval_task.link_prediction": [[7, 4, 1, "", "calc_ranks"], [7, 4, 1, "", "calc_ranks_SEGNN"], [7, 4, 1, "", "head_predict"], [7, 4, 1, "", "head_predict_SEGNN"], [7, 4, 1, "", "ind_predict"], [7, 4, 1, "", "link_predict"], [7, 4, 1, "", "link_predict_SEGNN"], [7, 4, 1, "", "tail_predict"], [7, 4, 1, "", "tail_predict_SEGNN"]], "neuralkg_ind.eval_task.triple_classification": [[7, 4, 1, "", "classification"]], "neuralkg_ind.lit_model": [[8, 0, 0, "-", "BaseLitModel"], [8, 0, 0, "-", "CompGCNLitModel"], [8, 0, 0, "-", "ConvELitModel"], [8, 0, 0, "-", "CrossELitModel"], [8, 0, 0, "-", "IterELitModel"], [8, 0, 0, "-", "KBATLitModel"], [8, 0, 0, "-", "KGELitModel"], [8, 0, 0, "-", "MetaGNNLitModel"], [8, 0, 0, "-", "RGCNLitModel"], [8, 0, 0, "-", "RugELitModel"], [8, 0, 0, "-", "SEGNNLitModel"], [8, 0, 0, "-", "SNRILitModel"], [8, 0, 0, "-", "XTransELitModel"], [8, 0, 0, "-", "indGNNLitModel"]], "neuralkg_ind.lit_model.BaseLitModel": [[8, 1, 1, "", "BaseLitModel"], [8, 1, 1, "", "Config"]], "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel": [[8, 2, 1, "", "add_to_argparse"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "get_auc"], [8, 2, 1, "", "get_results"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.CompGCNLitModel": [[8, 1, 1, "", "CompGCNLitModel"]], "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.ConvELitModel": [[8, 1, 1, "", "ConvELitModel"]], "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.CrossELitModel": [[8, 1, 1, "", "CrossELitModel"]], "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.IterELitModel": [[8, 1, 1, "", "IterELitModel"]], "neuralkg_ind.lit_model.IterELitModel.IterELitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_epoch_end"], [8, 2, 1, "", "training_step"], [8, 2, 1, "", "update_axiom"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.KBATLitModel": [[8, 1, 1, "", "KBATLitModel"]], "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.KGELitModel": [[8, 1, 1, "", "KGELitModel"]], "neuralkg_ind.lit_model.KGELitModel.KGELitModel": [[8, 2, 1, "", "add_to_argparse"], [8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.MetaGNNLitModel": [[8, 1, 1, "", "MetaGNNLitModel"]], "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel": [[8, 2, 1, "", "add_to_argparse"], [8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.RGCNLitModel": [[8, 1, 1, "", "RGCNLitModel"]], "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.RugELitModel": [[8, 1, 1, "", "RugELitModel"]], "neuralkg_ind.lit_model.RugELitModel.RugELitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_epoch_end"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.SEGNNLitModel": [[8, 1, 1, "", "SEGNNLitModel"]], "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 2, 1, "", "get_kg"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.SNRILitModel": [[8, 1, 1, "", "SNRILitModel"]], "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel": [[8, 2, 1, "", "add_to_argparse"], [8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.XTransELitModel": [[8, 1, 1, "", "XTransELitModel"]], "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel": [[8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.lit_model.indGNNLitModel": [[8, 1, 1, "", "indGNNLitModel"]], "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel": [[8, 2, 1, "", "add_to_argparse"], [8, 3, 1, "", "allow_zero_length_dataloader_with_multiple_devices"], [8, 2, 1, "", "configure_optimizers"], [8, 2, 1, "", "forward"], [8, 3, 1, "", "precision"], [8, 3, 1, "", "prepare_data_per_node"], [8, 2, 1, "", "test_epoch_end"], [8, 2, 1, "", "test_step"], [8, 3, 1, "", "training"], [8, 2, 1, "", "training_step"], [8, 3, 1, "", "use_amp"], [8, 2, 1, "", "validation_epoch_end"], [8, 2, 1, "", "validation_step"]], "neuralkg_ind.loss": [[9, 0, 0, "-", "Adv_Loss"], [9, 0, 0, "-", "ComplEx_NNE_AER_Loss"], [9, 0, 0, "-", "CrossE_Loss"], [9, 0, 0, "-", "Cross_Entropy_Loss"], [9, 0, 0, "-", "KBAT_Loss"], [9, 0, 0, "-", "Logsig_Loss"], [9, 0, 0, "-", "Margin_Loss"], [9, 0, 0, "-", "RGCN_Loss"], [9, 0, 0, "-", "RugE_Loss"], [9, 0, 0, "-", "SimplE_Loss"], [9, 0, 0, "-", "Softplus_Loss"]], "neuralkg_ind.loss.Adv_Loss": [[9, 1, 1, "", "Adv_Loss"]], "neuralkg_ind.loss.Adv_Loss.Adv_Loss": [[9, 3, 1, "", "args"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "model"], [9, 2, 1, "", "normalize"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.ComplEx_NNE_AER_Loss": [[9, 1, 1, "", "ComplEx_NNE_AER_Loss"]], "neuralkg_ind.loss.ComplEx_NNE_AER_Loss.ComplEx_NNE_AER_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.CrossE_Loss": [[9, 1, 1, "", "CrossE_Loss"]], "neuralkg_ind.loss.CrossE_Loss.CrossE_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.Cross_Entropy_Loss": [[9, 1, 1, "", "Cross_Entropy_Loss"]], "neuralkg_ind.loss.Cross_Entropy_Loss.Cross_Entropy_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.KBAT_Loss": [[9, 1, 1, "", "KBAT_Loss"]], "neuralkg_ind.loss.KBAT_Loss.KBAT_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.Logsig_Loss": [[9, 1, 1, "", "Logsig_Loss"]], "neuralkg_ind.loss.Logsig_Loss.Logsig_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.Margin_Loss": [[9, 1, 1, "", "Margin_Loss"]], "neuralkg_ind.loss.Margin_Loss.Margin_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.RGCN_Loss": [[9, 1, 1, "", "RGCN_Loss"]], "neuralkg_ind.loss.RGCN_Loss.RGCN_Loss": [[9, 2, 1, "", "forward"], [9, 2, 1, "", "reg_loss"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.RugE_Loss": [[9, 1, 1, "", "RugE_Loss"]], "neuralkg_ind.loss.RugE_Loss.RugE_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.SimplE_Loss": [[9, 1, 1, "", "SimplE_Loss"]], "neuralkg_ind.loss.SimplE_Loss.SimplE_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "training"]], "neuralkg_ind.loss.Softplus_Loss": [[9, 1, 1, "", "Softplus_Loss"]], "neuralkg_ind.loss.Softplus_Loss.Softplus_Loss": [[9, 2, 1, "", "forward"], [9, 3, 1, "", "model"], [9, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel": [[0, 0, 0, "-", "CoMPILE"], [0, 0, 0, "-", "CompGCN"], [0, 0, 0, "-", "Grail"], [0, 0, 0, "-", "KBAT"], [0, 0, 0, "-", "MorsE"], [0, 0, 0, "-", "RGCN"], [0, 0, 0, "-", "RMPI"], [0, 0, 0, "-", "SEGNN"], [0, 0, 0, "-", "SNRI"], [0, 0, 0, "-", "XTransE"], [0, 0, 0, "-", "layer"], [0, 0, 0, "-", "model"]], "neuralkg_ind.model.GNNModel.CoMPILE": [[0, 1, 1, "", "CoMPILE"], [0, 1, 1, "", "MySpMM"], [0, 4, 1, "", "gnn_spmm"]], "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE": [[0, 2, 1, "", "CoMPILEConv"], [0, 3, 1, "", "args"], [0, 2, 1, "", "batch_subgraph"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "hidden_size"], [0, 3, 1, "", "latent_dim"], [0, 3, 1, "", "node_emb"], [0, 3, 1, "", "output_dim"], [0, 3, 1, "", "relation_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.CoMPILE.MySpMM": [[0, 2, 1, "", "backward"], [0, 2, 1, "", "forward"]], "neuralkg_ind.model.GNNModel.CompGCN": [[0, 1, 1, "", "CompGCN"], [0, 1, 1, "", "CompGCNCov"]], "neuralkg_ind.model.GNNModel.CompGCN.CompGCN": [[0, 3, 1, "", "args"], [0, 2, 1, "", "build_hidden_layer"], [0, 2, 1, "", "concat"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_score"], [0, 2, 1, "", "init_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov": [[0, 2, 1, "", "comp"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_param"], [0, 2, 1, "", "message"], [0, 2, 1, "", "reduce_func"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.Grail": [[0, 1, 1, "", "Grail"], [0, 1, 1, "", "RGCN"], [0, 1, 1, "", "RelAttGraphConv"]], "neuralkg_ind.model.GNNModel.Grail.Grail": [[0, 3, 1, "", "args"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "gnn"], [0, 3, 1, "", "rel_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.Grail.RGCN": [[0, 3, 1, "", "args"], [0, 3, 1, "", "attn_rel_emb"], [0, 3, 1, "", "attn_rel_emb_dim"], [0, 3, 1, "", "basiclayer"], [0, 2, 1, "", "build_hidden_layer"], [0, 3, 1, "", "emb_dim"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "has_attn"], [0, 2, 1, "", "init_emb"], [0, 3, 1, "", "inp_dim"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv": [[0, 3, 1, "", "aggregator"], [0, 3, 1, "", "args"], [0, 3, 1, "", "bias"], [0, 3, 1, "", "edge_dropout"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "has_attn"], [0, 3, 1, "", "inp_dim"], [0, 3, 1, "", "is_input_layer"], [0, 3, 1, "", "num_bases"], [0, 3, 1, "", "num_rels"], [0, 3, 1, "", "out_dim"], [0, 2, 1, "", "propagate"], [0, 3, 1, "", "self_loop_weight"], [0, 3, 1, "", "training"], [0, 3, 1, "", "w_comp"], [0, 3, 1, "", "weight"]], "neuralkg_ind.model.GNNModel.KBAT": [[0, 1, 1, "", "GraphAttentionLayer"], [0, 1, 1, "", "KBAT"], [0, 1, 1, "", "SpecialSpmmFinal"], [0, 1, 1, "", "SpecialSpmmFunctionFinal"]], "neuralkg_ind.model.GNNModel.KBAT.GraphAttentionLayer": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.KBAT.KBAT": [[0, 3, 1, "", "args"], [0, 2, 1, "", "cal_Con_score"], [0, 2, 1, "", "cal_GAT_score"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "forward_Con"], [0, 2, 1, "", "forward_GAT"], [0, 2, 1, "", "get_score"], [0, 2, 1, "", "init_ConvKB_emb"], [0, 2, 1, "", "init_GAT_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFinal": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFunctionFinal": [[0, 2, 1, "", "backward"], [0, 2, 1, "", "forward"]], "neuralkg_ind.model.GNNModel.MorsE": [[0, 1, 1, "", "EntInit"], [0, 1, 1, "", "KGEModel"], [0, 1, 1, "", "MorsE"], [0, 1, 1, "", "RGCN"], [0, 1, 1, "", "RelMorsGraphConv"]], "neuralkg_ind.model.GNNModel.MorsE.EntInit": [[0, 3, 1, "", "args"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "rel_head_emb"], [0, 3, 1, "", "rel_tail_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.MorsE.KGEModel": [[0, 3, 1, "", "args"], [0, 3, 1, "", "emb_dim"], [0, 3, 1, "", "embedding_range"], [0, 3, 1, "", "epsilon"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "margin"], [0, 3, 1, "", "model_name"], [0, 3, 1, "", "nrelation"], [0, 3, 1, "", "relation_embedding"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.MorsE.MorsE": [[0, 3, 1, "", "KGEModel"], [0, 3, 1, "", "args"], [0, 3, 1, "", "ent_init"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_ent_emb"], [0, 2, 1, "", "get_intest_train_g"], [0, 2, 1, "", "get_num_rel"], [0, 2, 1, "", "get_score"], [0, 3, 1, "", "rgcn"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.MorsE.RGCN": [[0, 3, 1, "", "aggregator"], [0, 3, 1, "", "args"], [0, 3, 1, "", "basiclayer"], [0, 2, 1, "", "build_hidden_layer"], [0, 3, 1, "", "emb_dim"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "inp_dim"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv": [[0, 3, 1, "", "aggregator"], [0, 2, 1, "", "apply_node_func"], [0, 3, 1, "", "args"], [0, 3, 1, "", "bias"], [0, 3, 1, "", "edge_dropout"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "has_attn"], [0, 3, 1, "", "inp_dim"], [0, 3, 1, "", "is_input_layer"], [0, 2, 1, "", "message"], [0, 3, 1, "", "num_bases"], [0, 3, 1, "", "num_rels"], [0, 3, 1, "", "out_dim"], [0, 3, 1, "", "self_loop_weight"], [0, 3, 1, "", "training"], [0, 3, 1, "", "w_comp"], [0, 3, 1, "", "weight"]], "neuralkg_ind.model.GNNModel.RGCN": [[0, 1, 1, "", "RGCN"], [0, 1, 1, "", "RelGraphConv"]], "neuralkg_ind.model.GNNModel.RGCN.RGCN": [[0, 3, 1, "", "args"], [0, 2, 1, "", "build_hidden_layer"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_score"], [0, 2, 1, "", "init_emb"], [0, 3, 1, "", "training"], [0, 2, 1, "", "tri2emb"]], "neuralkg_ind.model.GNNModel.RGCN.RelGraphConv": [[0, 2, 1, "", "forward"], [0, 2, 1, "", "message"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.RMPI": [[0, 1, 1, "", "RMPI"]], "neuralkg_ind.model.GNNModel.RMPI.RMPI": [[0, 2, 1, "", "AggregateConv"], [0, 3, 1, "", "args"], [0, 3, 1, "", "conc"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "rel_emb"], [0, 2, 1, "", "sparse_dense_mul"], [0, 2, 1, "", "sparse_index_select"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.SEGNN": [[0, 1, 1, "", "CompLayer"], [0, 1, 1, "", "EdgeLayer"], [0, 1, 1, "", "NodeLayer"], [0, 1, 1, "", "SEGNN"]], "neuralkg_ind.model.GNNModel.SEGNN.CompLayer": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.SEGNN.EdgeLayer": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.SEGNN.NodeLayer": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.SEGNN.SEGNN": [[0, 2, 1, "", "aggragate_emb"], [0, 2, 1, "", "concat"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.SNRI": [[0, 1, 1, "", "Discriminator"], [0, 1, 1, "", "RelCompGraphConv"], [0, 1, 1, "", "SNRI"]], "neuralkg_ind.model.GNNModel.SNRI.Discriminator": [[0, 3, 1, "", "c"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "h_mi"], [0, 3, 1, "", "h_pl"], [0, 3, 1, "", "n_e"], [0, 3, 1, "", "n_g"], [0, 3, 1, "", "s_bias1"], [0, 3, 1, "", "s_bias2"], [0, 3, 1, "", "training"], [0, 2, 1, "", "weights_init"]], "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv": [[0, 3, 1, "", "aggregator"], [0, 3, 1, "", "args"], [0, 3, 1, "", "bias"], [0, 3, 1, "", "edge_dropout"], [0, 2, 1, "", "forward"], [0, 3, 1, "", "has_attn"], [0, 3, 1, "", "inp_dim"], [0, 3, 1, "", "is_input_layer"], [0, 3, 1, "", "num_bases"], [0, 3, 1, "", "num_rels"], [0, 3, 1, "", "out_dim"], [0, 2, 1, "", "propagate"], [0, 3, 1, "", "self_loop_weight"], [0, 3, 1, "", "training"], [0, 3, 1, "", "w_comp"], [0, 3, 1, "", "weight"]], "neuralkg_ind.model.GNNModel.SNRI.SNRI": [[0, 3, 1, "", "args"], [0, 2, 1, "", "comp_hrt_emb"], [0, 2, 1, "", "comp_ht_emb"], [0, 3, 1, "", "ent_padding"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_logits"], [0, 3, 1, "", "gnn"], [0, 2, 1, "", "init_ent_emb_matrix"], [0, 2, 1, "", "nei_rel_path"], [0, 3, 1, "", "rel_emb"], [0, 3, 1, "", "training"], [0, 3, 1, "", "w_rel2ent"]], "neuralkg_ind.model.GNNModel.XTransE": [[0, 1, 1, "", "XTransE"]], "neuralkg_ind.model.GNNModel.XTransE.XTransE": [[0, 3, 1, "", "args"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_score"], [0, 2, 1, "", "init_emb"], [0, 2, 1, "", "score_func"], [0, 3, 1, "", "training"], [0, 2, 1, "", "transe_func"]], "neuralkg_ind.model.GNNModel.layer": [[0, 1, 1, "", "Aggregator"], [0, 1, 1, "", "BatchGRU"], [0, 1, 1, "", "GNNLayer"], [0, 1, 1, "", "GRUAggregator"], [0, 1, 1, "", "MLPAggregator"], [0, 1, 1, "", "SUMAggregator"]], "neuralkg_ind.model.GNNModel.layer.Aggregator": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"], [0, 2, 1, "", "update_embedding"]], "neuralkg_ind.model.GNNModel.layer.BatchGRU": [[0, 2, 1, "", "forward"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.layer.GNNLayer": [[0, 2, 1, "", "forward"], [0, 2, 1, "", "message"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.GNNModel.layer.GRUAggregator": [[0, 3, 1, "", "training"], [0, 2, 1, "", "update_embedding"]], "neuralkg_ind.model.GNNModel.layer.MLPAggregator": [[0, 3, 1, "", "training"], [0, 2, 1, "", "update_embedding"]], "neuralkg_ind.model.GNNModel.layer.SUMAggregator": [[0, 3, 1, "", "training"], [0, 2, 1, "", "update_embedding"]], "neuralkg_ind.model.GNNModel.model": [[0, 1, 1, "", "Model"]], "neuralkg_ind.model.GNNModel.model.Model": [[0, 2, 1, "", "build_hidden_layer"], [0, 2, 1, "", "build_model"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "init_emb"], [0, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel": [[3, 0, 0, "-", "BoxE"], [3, 0, 0, "-", "ComplEx"], [3, 0, 0, "-", "ConvE"], [3, 0, 0, "-", "CrossE"], [3, 0, 0, "-", "DistMult"], [3, 0, 0, "-", "DualE"], [3, 0, 0, "-", "HAKE"], [3, 0, 0, "-", "PairRE"], [3, 0, 0, "-", "RotatE"], [3, 0, 0, "-", "SimplE"], [3, 0, 0, "-", "TransE"], [3, 0, 0, "-", "TransH"], [3, 0, 0, "-", "TransR"], [3, 0, 0, "-", "model"]], "neuralkg_ind.model.KGEModel.BoxE": [[3, 1, 1, "", "BoxE"]], "neuralkg_ind.model.KGEModel.BoxE.BoxE": [[3, 3, 1, "", "args"], [3, 2, 1, "", "calc_score"], [3, 2, 1, "", "dist"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.ComplEx": [[3, 1, 1, "", "ComplEx"]], "neuralkg_ind.model.KGEModel.ComplEx.ComplEx": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "mapping_embedding"], [3, 2, 1, "", "score_embedding"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.ConvE": [[3, 1, 1, "", "ConvE"]], "neuralkg_ind.model.KGEModel.ConvE.ConvE": [[3, 3, 1, "", "args"], [3, 2, 1, "", "concat"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.CrossE": [[3, 1, 1, "", "CrossE"]], "neuralkg_ind.model.KGEModel.CrossE.CrossE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "ent_emb"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 3, 1, "", "h_weighted_vector"], [3, 3, 1, "", "hr_bias"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "regularize_loss"], [3, 3, 1, "", "rel_emb"], [3, 3, 1, "", "rel_reverse_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "t_weighted_vector"], [3, 3, 1, "", "tr_bias"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.DistMult": [[3, 1, 1, "", "DistMult"]], "neuralkg_ind.model.KGEModel.DistMult.DistMult": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "mapping_embedding"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_embedding"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.DualE": [[3, 1, 1, "", "DualE"]], "neuralkg_ind.model.KGEModel.DualE.DualE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "ent_emb"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_weights"], [3, 2, 1, "", "quaternion_init"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.HAKE": [[3, 1, 1, "", "HAKE"]], "neuralkg_ind.model.KGEModel.HAKE.HAKE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "modules_weight"], [3, 3, 1, "", "phase_weight"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.PairRE": [[3, 1, 1, "", "PairRE"]], "neuralkg_ind.model.KGEModel.PairRE.PairRE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.RotatE": [[3, 1, 1, "", "RotatE"]], "neuralkg_ind.model.KGEModel.RotatE.RotatE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "mapping_embedding"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_embedding"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.SimplE": [[3, 1, 1, "", "SimplE"]], "neuralkg_ind.model.KGEModel.SimplE.SimplE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_h_emb"], [3, 3, 1, "", "ent_t_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_emb"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "l2_loss"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 3, 1, "", "rel_inv_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.TransE": [[3, 1, 1, "", "TransE"]], "neuralkg_ind.model.KGEModel.TransE.TransE": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "mapping_embedding"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_embedding"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.TransH": [[3, 1, 1, "", "TransH"]], "neuralkg_ind.model.KGEModel.TransH.TransH": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "norm_vector"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"]], "neuralkg_ind.model.KGEModel.TransR": [[3, 1, 1, "", "TransR"]], "neuralkg_ind.model.KGEModel.TransR.TransR": [[3, 3, 1, "", "args"], [3, 3, 1, "", "embedding_range"], [3, 3, 1, "", "ent_emb"], [3, 3, 1, "", "epsilon"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_score"], [3, 2, 1, "", "init_emb"], [3, 3, 1, "", "margin"], [3, 3, 1, "", "rel_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"], [3, 3, 1, "", "transfer_matrix"]], "neuralkg_ind.model.KGEModel.model": [[3, 1, 1, "", "Model"]], "neuralkg_ind.model.KGEModel.model.Model": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "init_emb"], [3, 2, 1, "", "score_func"], [3, 3, 1, "", "training"], [3, 2, 1, "", "tri2emb"]], "neuralkg_ind.model.RuleModel": [[13, 0, 0, "-", "ComplEx_NNE_AER"], [13, 0, 0, "-", "IterE"], [13, 0, 0, "-", "RugE"], [13, 0, 0, "-", "model"]], "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER": [[13, 1, 1, "", "ComplEx_NNE_AER"]], "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER": [[13, 3, 1, "", "args"], [13, 3, 1, "", "embedding_range"], [13, 3, 1, "", "ent_emb"], [13, 3, 1, "", "epsilon"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "get_rule"], [13, 2, 1, "", "get_score"], [13, 2, 1, "", "init_emb"], [13, 3, 1, "", "margin"], [13, 3, 1, "", "rel_emb"], [13, 2, 1, "", "score_func"], [13, 3, 1, "", "training"]], "neuralkg_ind.model.RuleModel.IterE": [[13, 1, 1, "", "IterE"]], "neuralkg_ind.model.RuleModel.IterE.IterE": [[13, 3, 1, "", "args"], [13, 3, 1, "", "embedding_range"], [13, 3, 1, "", "ent_emb"], [13, 3, 1, "", "epsilon"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "generate_new_train_triples"], [13, 2, 1, "", "get_axiom"], [13, 2, 1, "", "get_rule"], [13, 2, 1, "", "get_score"], [13, 2, 1, "", "init_emb"], [13, 3, 1, "", "margin"], [13, 3, 1, "", "rel_emb"], [13, 2, 1, "", "run_axiom_probability"], [13, 2, 1, "", "score_func"], [13, 2, 1, "", "sim"], [13, 2, 1, "", "split_embedding"], [13, 3, 1, "", "training"], [13, 2, 1, "", "update_train_triples"], [13, 2, 1, "", "update_valid_axioms"]], "neuralkg_ind.model.RuleModel.RugE": [[13, 1, 1, "", "RugE"]], "neuralkg_ind.model.RuleModel.RugE.RugE": [[13, 3, 1, "", "args"], [13, 3, 1, "", "embedding_range"], [13, 3, 1, "", "ent_emb"], [13, 3, 1, "", "epsilon"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "get_score"], [13, 2, 1, "", "init_emb"], [13, 3, 1, "", "margin"], [13, 3, 1, "", "rel_emb"], [13, 2, 1, "", "score_func"], [13, 3, 1, "", "training"]], "neuralkg_ind.model.RuleModel.model": [[13, 1, 1, "", "Model"]], "neuralkg_ind.model.RuleModel.model.Model": [[13, 2, 1, "", "forward"], [13, 2, 1, "", "init_emb"], [13, 2, 1, "", "score_func"], [13, 3, 1, "", "training"], [13, 2, 1, "", "tri2emb"]], "neuralkg_ind.utils": [[11, 0, 0, "-", "setup_parser"], [11, 0, 0, "-", "tools"]], "neuralkg_ind.utils.setup_parser": [[11, 4, 1, "", "setup_parser"]], "neuralkg_ind.utils.tools": [[11, 4, 1, "", "bfs_relational"], [11, 4, 1, "", "data2pkl"], [11, 4, 1, "", "deserialize"], [11, 4, 1, "", "deserialize_RMPI"], [11, 4, 1, "", "extract_save_subgraph"], [11, 4, 1, "", "gen_meta_subgraph_datasets"], [11, 4, 1, "", "gen_subgraph_datasets"], [11, 4, 1, "", "get_average_meta_subgraph_size"], [11, 4, 1, "", "get_average_subgraph_size"], [11, 4, 1, "", "get_edge_count"], [11, 4, 1, "", "get_g"], [11, 4, 1, "", "get_g_bidir"], [11, 4, 1, "", "get_hr2t_rt2h"], [11, 4, 1, "", "get_hr2t_rt2h_sup_que"], [11, 4, 1, "", "get_indtest_test_dataset_and_train_g"], [11, 4, 1, "", "get_neighbor_nodes"], [11, 4, 1, "", "get_neighbors"], [11, 4, 1, "", "get_param"], [11, 4, 1, "", "import_class"], [11, 4, 1, "", "incidence_matrix"], [11, 4, 1, "", "intialize_worker"], [11, 4, 1, "", "links2subgraphs"], [11, 4, 1, "", "load_config"], [11, 4, 1, "", "load_data_grail"], [11, 4, 1, "", "load_ind_data_grail"], [11, 4, 1, "", "log_metrics"], [11, 4, 1, "", "log_step_metrics"], [11, 4, 1, "", "node_label"], [11, 4, 1, "", "override_config"], [11, 4, 1, "", "reidx"], [11, 4, 1, "", "reidx_withr"], [11, 4, 1, "", "reidx_withr_ande"], [11, 4, 1, "", "remove_nodes"], [11, 4, 1, "", "sample_neg"], [11, 4, 1, "", "sample_one_subgraph"], [11, 4, 1, "", "save_config"], [11, 4, 1, "", "serialize"], [11, 4, 1, "", "set_logger"], [11, 4, 1, "", "sp_row_vec_from_idx_list"], [11, 4, 1, "", "ssp_multigraph_to_dgl"], [11, 4, 1, "", "subgraph_extraction_labeling"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"gnnmodel": 0, "model": [0, 3, 10, 13], "layer": 0, "compil": 0, "compgcn": 0, "grail": 0, "kbat": 0, "mors": 0, "rgcn": 0, "rmpi": 0, "segnn": 0, "snri": 0, "xtrans": 0, "neuralkg": [1, 5], "ind": [1, 5], "document": 1, "introduct": 1, "get": 1, "start": 1, "experi": 1, "result": [1, 12], "packag": 1, "instal": 2, "creat": 2, "environ": 2, "from": 2, "sourc": 2, "pypi": 2, "kgemodel": 3, "trans": 3, "transh": 3, "box": 3, "complex": 3, "conv": 3, "cross": 3, "distmult": 3, "dual": 3, "hake": 3, "pairr": 3, "rotat": 3, "simpl": 3, "transr": 3, "neuralkg_ind": 4, "subpackag": [], "data": 6, "datapreprocess": 6, "ground": 6, "kgdatamodul": 6, "ruledataload": 6, "sampler": 6, "base_data_modul": 6, "eval_task": 7, "link_predict": 7, "triple_classif": 7, "lit_model": 8, "baselitmodel": 8, "kgelitmodel": 8, "indgnnlitmodel": 8, "compgcnlitmodel": 8, "convelitmodel": 8, "crosselitmodel": 8, "iterelitmodel": 8, "kbatlitmodel": 8, "metagnnlitmodel": 8, "rgcnlitmodel": 8, "rugelitmodel": 8, "segnnlitmodel": 8, "snrilitmodel": 8, "xtranselitmodel": 8, "loss": 9, "adv_loss": 9, "complex_nne_aer_loss": 9, "crosse_loss": 9, "cross_entropy_loss": 9, "kbat_loss": 9, "logsig_loss": 9, "margin_loss": 9, "rgcn_loss": 9, "ruge_loss": 9, "simple_loss": 9, "softplus_loss": 9, "util": 11, "setup_pars": 11, "tool": 11, "fb15k237": 12, "v1": 12, "v2": 12, "v3": 12, "v4": 12, "rulemodel": 13, "complex_nne_a": 13, "iter": 13, "ruge": 13, "wn18rr": 12, "nell": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"GNNModel": [[0, "gnnmodel"]], "model": [[0, "module-neuralkg_ind.model.GNNModel.model"], [3, "module-neuralkg_ind.model.KGEModel.model"], [13, "module-neuralkg_ind.model.RuleModel.model"]], "layer": [[0, "module-neuralkg_ind.model.GNNModel.layer"]], "RGCN": [[0, "module-neuralkg_ind.model.GNNModel.RGCN"]], "CompGCN": [[0, "module-neuralkg_ind.model.GNNModel.CompGCN"]], "SEGNN": [[0, "module-neuralkg_ind.model.GNNModel.SEGNN"]], "XTransE": [[0, "module-neuralkg_ind.model.GNNModel.XTransE"]], "KBAT": [[0, "module-neuralkg_ind.model.GNNModel.KBAT"]], "Grail": [[0, "module-neuralkg_ind.model.GNNModel.Grail"]], "CoMPILE": [[0, "module-neuralkg_ind.model.GNNModel.CoMPILE"]], "SNRI": [[0, "module-neuralkg_ind.model.GNNModel.SNRI"]], "RMPI": [[0, "module-neuralkg_ind.model.GNNModel.RMPI"]], "MorsE": [[0, "module-neuralkg_ind.model.GNNModel.MorsE"]], "NeuralKG-ind Documentation": [[1, "neuralkg-ind-documentation"]], "Introduction": [[1, "introduction"]], "Getting Started": [[1, null]], "Experiment Result": [[1, null]], "Package": [[1, null]], "Install": [[2, "install"]], "Create environment": [[2, "create-environment"]], "Install from source": [[2, "install-from-source"]], "Install by pypi": [[2, "install-by-pypi"]], "KGEModel": [[3, "kgemodel"]], "TransE": [[3, "module-neuralkg_ind.model.KGEModel.TransE"]], "TransH": [[3, "module-neuralkg_ind.model.KGEModel.TransH"]], "TransR": [[3, "module-neuralkg_ind.model.KGEModel.TransR"]], "RotatE": [[3, "module-neuralkg_ind.model.KGEModel.RotatE"]], "DistMult": [[3, "module-neuralkg_ind.model.KGEModel.DistMult"]], "ComplEx": [[3, "module-neuralkg_ind.model.KGEModel.ComplEx"]], "SimplE": [[3, "module-neuralkg_ind.model.KGEModel.SimplE"]], "ConvE": [[3, "module-neuralkg_ind.model.KGEModel.ConvE"]], "BoxE": [[3, "module-neuralkg_ind.model.KGEModel.BoxE"]], "CrossE": [[3, "module-neuralkg_ind.model.KGEModel.CrossE"]], "HAKE": [[3, "module-neuralkg_ind.model.KGEModel.HAKE"]], "PairRE": [[3, "module-neuralkg_ind.model.KGEModel.PairRE"]], "DualE": [[3, "module-neuralkg_ind.model.KGEModel.DualE"]], "neuralkg_ind": [[4, "neuralkg-ind"]], "NeuralKG-ind": [[5, "neuralkg-ind"]], "Data": [[6, "data"]], "DataPreprocess": [[6, "module-neuralkg_ind.data.DataPreprocess"]], "Grounding": [[6, "module-neuralkg_ind.data.Grounding"]], "KGDataModule": [[6, "module-neuralkg_ind.data.KGDataModule"]], "RuleDataLoader": [[6, "module-neuralkg_ind.data.RuleDataLoader"]], "Sampler": [[6, "module-neuralkg_ind.data.Sampler"]], "base_data_module": [[6, "module-neuralkg_ind.data.base_data_module"]], "Eval_Task": [[7, "eval-task"]], "link_prediction": [[7, "module-neuralkg_ind.eval_task.link_prediction"]], "triple_classification": [[7, "module-neuralkg_ind.eval_task.triple_classification"]], "Lit_Model": [[8, "lit-model"]], "BaseLitModel": [[8, "module-neuralkg_ind.lit_model.BaseLitModel"]], "KGELitModel": [[8, "module-neuralkg_ind.lit_model.KGELitModel"]], "indGNNLitModel": [[8, "module-neuralkg_ind.lit_model.indGNNLitModel"]], "CompGCNLitModel": [[8, "module-neuralkg_ind.lit_model.CompGCNLitModel"]], "ConvELitModel": [[8, "module-neuralkg_ind.lit_model.ConvELitModel"]], "CrossELitModel": [[8, "module-neuralkg_ind.lit_model.CrossELitModel"]], "IterELitModel": [[8, "module-neuralkg_ind.lit_model.IterELitModel"]], "KBATLitModel": [[8, "module-neuralkg_ind.lit_model.KBATLitModel"]], "MetaGNNLitModel": [[8, "module-neuralkg_ind.lit_model.MetaGNNLitModel"]], "RGCNLitModel": [[8, "module-neuralkg_ind.lit_model.RGCNLitModel"]], "RugELitModel": [[8, "module-neuralkg_ind.lit_model.RugELitModel"]], "SEGNNLitModel": [[8, "module-neuralkg_ind.lit_model.SEGNNLitModel"]], "SNRILitModel": [[8, "module-neuralkg_ind.lit_model.SNRILitModel"]], "XTransELitModel": [[8, "module-neuralkg_ind.lit_model.XTransELitModel"]], "loss": [[9, "loss"]], "Adv_Loss": [[9, "module-neuralkg_ind.loss.Adv_Loss"]], "ComplEx_NNE_AER_Loss": [[9, "module-neuralkg_ind.loss.ComplEx_NNE_AER_Loss"]], "CrossE_Loss": [[9, "module-neuralkg_ind.loss.CrossE_Loss"]], "Cross_Entropy_Loss": [[9, "module-neuralkg_ind.loss.Cross_Entropy_Loss"]], "KBAT_Loss": [[9, "module-neuralkg_ind.loss.KBAT_Loss"]], "Logsig_Loss": [[9, "module-neuralkg_ind.loss.Logsig_Loss"]], "Margin_Loss": [[9, "module-neuralkg_ind.loss.Margin_Loss"]], "RGCN_Loss": [[9, "module-neuralkg_ind.loss.RGCN_Loss"]], "RugE_Loss": [[9, "module-neuralkg_ind.loss.RugE_Loss"]], "SimplE_Loss": [[9, "module-neuralkg_ind.loss.SimplE_Loss"]], "Softplus_Loss": [[9, "module-neuralkg_ind.loss.Softplus_Loss"]], "Model": [[10, "model"]], "Utils": [[11, "utils"]], "setup_parser": [[11, "module-neuralkg_ind.utils.setup_parser"]], "tools": [[11, "module-neuralkg_ind.utils.tools"]], "Results": [[12, "results"]], "FB15K237-v1": [[12, "fb15k237-v1"]], "FB15K237-v2": [[12, "fb15k237-v2"]], "FB15K237-v3": [[12, "fb15k237-v3"]], "FB15K237-v4": [[12, "fb15k237-v4"]], "WN18RR-v1": [[12, "wn18rr-v1"]], "WN18RR-v2": [[12, "wn18rr-v2"]], "WN18RR-v3": [[12, "wn18rr-v3"]], "WN18RR-v4": [[12, "wn18rr-v4"]], "NELL-v1": [[12, "nell-v1"]], "NELL-v2": [[12, "nell-v2"]], "NELL-v3": [[12, "nell-v3"]], "NELL-v4": [[12, "nell-v4"]], "RuleModel": [[13, "rulemodel"]], "ComplEx_NNE_AER": [[13, "module-neuralkg_ind.model.RuleModel.ComplEx_NNE_AER"]], "IterE": [[13, "module-neuralkg_ind.model.RuleModel.IterE"]], "RugE": [[13, "module-neuralkg_ind.model.RuleModel.RugE"]]}, "indexentries": {"aggregateconv() (neuralkg_ind.model.gnnmodel.rmpi.rmpi method)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.AggregateConv"]], "aggregator (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.Aggregator"]], "batchgru (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.BatchGRU"]], "compile (class in neuralkg_ind.model.gnnmodel.compile)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE"]], "compileconv() (neuralkg_ind.model.gnnmodel.compile.compile method)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.CoMPILEConv"]], "compgcn (class in neuralkg_ind.model.gnnmodel.compgcn)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN"]], "compgcncov (class in neuralkg_ind.model.gnnmodel.compgcn)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov"]], "complayer (class in neuralkg_ind.model.gnnmodel.segnn)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.CompLayer"]], "discriminator (class in neuralkg_ind.model.gnnmodel.snri)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator"]], "edgelayer (class in neuralkg_ind.model.gnnmodel.segnn)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.EdgeLayer"]], "entinit (class in neuralkg_ind.model.gnnmodel.morse)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit"]], "gnnlayer (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.GNNLayer"]], "gruaggregator (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.GRUAggregator"]], "grail (class in neuralkg_ind.model.gnnmodel.grail)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail"]], "graphattentionlayer (class in neuralkg_ind.model.gnnmodel.kbat)": [[0, "neuralkg_ind.model.GNNModel.KBAT.GraphAttentionLayer"]], "kbat (class in neuralkg_ind.model.gnnmodel.kbat)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT"]], "kgemodel (class in neuralkg_ind.model.gnnmodel.morse)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel"]], "kgemodel (neuralkg_ind.model.gnnmodel.morse.morse attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.KGEModel"]], "mlpaggregator (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.MLPAggregator"]], "model (class in neuralkg_ind.model.gnnmodel.model)": [[0, "neuralkg_ind.model.GNNModel.model.Model"]], "morse (class in neuralkg_ind.model.gnnmodel.morse)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE"]], "myspmm (class in neuralkg_ind.model.gnnmodel.compile)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.MySpMM"]], "nodelayer (class in neuralkg_ind.model.gnnmodel.segnn)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.NodeLayer"]], "rgcn (class in neuralkg_ind.model.gnnmodel.grail)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN"]], "rgcn (class in neuralkg_ind.model.gnnmodel.morse)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN"]], "rgcn (class in neuralkg_ind.model.gnnmodel.rgcn)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN"]], "rmpi (class in neuralkg_ind.model.gnnmodel.rmpi)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI"]], "relattgraphconv (class in neuralkg_ind.model.gnnmodel.grail)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv"]], "relcompgraphconv (class in neuralkg_ind.model.gnnmodel.snri)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv"]], "relgraphconv (class in neuralkg_ind.model.gnnmodel.rgcn)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RelGraphConv"]], "relmorsgraphconv (class in neuralkg_ind.model.gnnmodel.morse)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv"]], "segnn (class in neuralkg_ind.model.gnnmodel.segnn)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.SEGNN"]], "snri (class in neuralkg_ind.model.gnnmodel.snri)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI"]], "sumaggregator (class in neuralkg_ind.model.gnnmodel.layer)": [[0, "neuralkg_ind.model.GNNModel.layer.SUMAggregator"]], "specialspmmfinal (class in neuralkg_ind.model.gnnmodel.kbat)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFinal"]], "specialspmmfunctionfinal (class in neuralkg_ind.model.gnnmodel.kbat)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFunctionFinal"]], "xtranse (class in neuralkg_ind.model.gnnmodel.xtranse)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE"]], "aggragate_emb() (neuralkg_ind.model.gnnmodel.segnn.segnn method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.SEGNN.aggragate_emb"]], "aggregator (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.aggregator"]], "aggregator (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.aggregator"]], "aggregator (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.aggregator"]], "aggregator (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.aggregator"]], "apply_node_func() (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.apply_node_func"]], "args (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.args"]], "args (neuralkg_ind.model.gnnmodel.compgcn.compgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.args"]], "args (neuralkg_ind.model.gnnmodel.grail.grail attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail.args"]], "args (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.args"]], "args (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.args"]], "args (neuralkg_ind.model.gnnmodel.kbat.kbat attribute)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.args"]], "args (neuralkg_ind.model.gnnmodel.morse.entinit attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit.args"]], "args (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.args"]], "args (neuralkg_ind.model.gnnmodel.morse.morse attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.args"]], "args (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.args"]], "args (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.args"]], "args (neuralkg_ind.model.gnnmodel.rgcn.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.args"]], "args (neuralkg_ind.model.gnnmodel.rmpi.rmpi attribute)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.args"]], "args (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.args"]], "args (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.args"]], "args (neuralkg_ind.model.gnnmodel.xtranse.xtranse attribute)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.args"]], "attn_rel_emb (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.attn_rel_emb"]], "attn_rel_emb_dim (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.attn_rel_emb_dim"]], "backward() (neuralkg_ind.model.gnnmodel.compile.myspmm static method)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.MySpMM.backward"]], "backward() (neuralkg_ind.model.gnnmodel.kbat.specialspmmfunctionfinal static method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFunctionFinal.backward"]], "basiclayer (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.basiclayer"]], "basiclayer (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.basiclayer"]], "batch_subgraph() (neuralkg_ind.model.gnnmodel.compile.compile method)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.batch_subgraph"]], "bias (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.bias"]], "bias (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.bias"]], "bias (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.bias"]], "build_hidden_layer() (neuralkg_ind.model.gnnmodel.compgcn.compgcn method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.build_hidden_layer"]], "build_hidden_layer() (neuralkg_ind.model.gnnmodel.grail.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.build_hidden_layer"]], "build_hidden_layer() (neuralkg_ind.model.gnnmodel.morse.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.build_hidden_layer"]], "build_hidden_layer() (neuralkg_ind.model.gnnmodel.rgcn.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.build_hidden_layer"]], "build_hidden_layer() (neuralkg_ind.model.gnnmodel.model.model method)": [[0, "neuralkg_ind.model.GNNModel.model.Model.build_hidden_layer"]], "build_model() (neuralkg_ind.model.gnnmodel.model.model method)": [[0, "neuralkg_ind.model.GNNModel.model.Model.build_model"]], "c (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.c"]], "cal_con_score() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.cal_Con_score"]], "cal_gat_score() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.cal_GAT_score"]], "comp() (neuralkg_ind.model.gnnmodel.compgcn.compgcncov method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.comp"]], "comp_hrt_emb() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.comp_hrt_emb"]], "comp_ht_emb() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.comp_ht_emb"]], "conc (neuralkg_ind.model.gnnmodel.rmpi.rmpi attribute)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.conc"]], "concat() (neuralkg_ind.model.gnnmodel.compgcn.compgcn method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.concat"]], "concat() (neuralkg_ind.model.gnnmodel.segnn.segnn method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.SEGNN.concat"]], "edge_dropout (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.edge_dropout"]], "edge_dropout (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.edge_dropout"]], "edge_dropout (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.edge_dropout"]], "emb_dim (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.emb_dim"]], "emb_dim (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.emb_dim"]], "emb_dim (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.emb_dim"]], "embedding_range (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.embedding_range"]], "ent_init (neuralkg_ind.model.gnnmodel.morse.morse attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.ent_init"]], "ent_padding (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.ent_padding"]], "epsilon (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.epsilon"]], "forward() (neuralkg_ind.model.gnnmodel.compile.compile method)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.forward"]], "forward() (neuralkg_ind.model.gnnmodel.compile.myspmm static method)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.MySpMM.forward"]], "forward() (neuralkg_ind.model.gnnmodel.compgcn.compgcn method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.forward"]], "forward() (neuralkg_ind.model.gnnmodel.compgcn.compgcncov method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.forward"]], "forward() (neuralkg_ind.model.gnnmodel.grail.grail method)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail.forward"]], "forward() (neuralkg_ind.model.gnnmodel.grail.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.forward"]], "forward() (neuralkg_ind.model.gnnmodel.grail.relattgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.forward"]], "forward() (neuralkg_ind.model.gnnmodel.kbat.graphattentionlayer method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.GraphAttentionLayer.forward"]], "forward() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.forward"]], "forward() (neuralkg_ind.model.gnnmodel.kbat.specialspmmfinal method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFinal.forward"]], "forward() (neuralkg_ind.model.gnnmodel.kbat.specialspmmfunctionfinal static method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFunctionFinal.forward"]], "forward() (neuralkg_ind.model.gnnmodel.morse.entinit method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit.forward"]], "forward() (neuralkg_ind.model.gnnmodel.morse.kgemodel method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.forward"]], "forward() (neuralkg_ind.model.gnnmodel.morse.morse method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.forward"]], "forward() (neuralkg_ind.model.gnnmodel.morse.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.forward"]], "forward() (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.forward"]], "forward() (neuralkg_ind.model.gnnmodel.rgcn.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.forward"]], "forward() (neuralkg_ind.model.gnnmodel.rgcn.relgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RelGraphConv.forward"]], "forward() (neuralkg_ind.model.gnnmodel.rmpi.rmpi method)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.forward"]], "forward() (neuralkg_ind.model.gnnmodel.segnn.complayer method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.CompLayer.forward"]], "forward() (neuralkg_ind.model.gnnmodel.segnn.edgelayer method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.EdgeLayer.forward"]], "forward() (neuralkg_ind.model.gnnmodel.segnn.nodelayer method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.NodeLayer.forward"]], "forward() (neuralkg_ind.model.gnnmodel.segnn.segnn method)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.SEGNN.forward"]], "forward() (neuralkg_ind.model.gnnmodel.snri.discriminator method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.forward"]], "forward() (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.forward"]], "forward() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.forward"]], "forward() (neuralkg_ind.model.gnnmodel.xtranse.xtranse method)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.forward"]], "forward() (neuralkg_ind.model.gnnmodel.layer.aggregator method)": [[0, "neuralkg_ind.model.GNNModel.layer.Aggregator.forward"]], "forward() (neuralkg_ind.model.gnnmodel.layer.batchgru method)": [[0, "neuralkg_ind.model.GNNModel.layer.BatchGRU.forward"]], "forward() (neuralkg_ind.model.gnnmodel.layer.gnnlayer method)": [[0, "neuralkg_ind.model.GNNModel.layer.GNNLayer.forward"]], "forward() (neuralkg_ind.model.gnnmodel.model.model method)": [[0, "neuralkg_ind.model.GNNModel.model.Model.forward"]], "forward_con() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.forward_Con"]], "forward_gat() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.forward_GAT"]], "get_ent_emb() (neuralkg_ind.model.gnnmodel.morse.morse method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.get_ent_emb"]], "get_intest_train_g() (neuralkg_ind.model.gnnmodel.morse.morse method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.get_intest_train_g"]], "get_logits() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.get_logits"]], "get_num_rel() (neuralkg_ind.model.gnnmodel.morse.morse method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.get_num_rel"]], "get_param() (neuralkg_ind.model.gnnmodel.compgcn.compgcncov method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.get_param"]], "get_score() (neuralkg_ind.model.gnnmodel.compgcn.compgcn method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.get_score"]], "get_score() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.get_score"]], "get_score() (neuralkg_ind.model.gnnmodel.morse.morse method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.get_score"]], "get_score() (neuralkg_ind.model.gnnmodel.rgcn.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.get_score"]], "get_score() (neuralkg_ind.model.gnnmodel.xtranse.xtranse method)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.get_score"]], "gnn (neuralkg_ind.model.gnnmodel.grail.grail attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail.gnn"]], "gnn (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.gnn"]], "gnn_spmm() (in module neuralkg_ind.model.gnnmodel.compile)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.gnn_spmm"]], "h_mi (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.h_mi"]], "h_pl (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.h_pl"]], "has_attn (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.has_attn"]], "has_attn (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.has_attn"]], "has_attn (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.has_attn"]], "has_attn (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.has_attn"]], "hidden_size (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.hidden_size"]], "init_convkb_emb() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.init_ConvKB_emb"]], "init_gat_emb() (neuralkg_ind.model.gnnmodel.kbat.kbat method)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.init_GAT_emb"]], "init_emb() (neuralkg_ind.model.gnnmodel.compgcn.compgcn method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.init_emb"]], "init_emb() (neuralkg_ind.model.gnnmodel.grail.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.init_emb"]], "init_emb() (neuralkg_ind.model.gnnmodel.rgcn.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.init_emb"]], "init_emb() (neuralkg_ind.model.gnnmodel.xtranse.xtranse method)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.init_emb"]], "init_emb() (neuralkg_ind.model.gnnmodel.model.model method)": [[0, "neuralkg_ind.model.GNNModel.model.Model.init_emb"]], "init_ent_emb_matrix() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.init_ent_emb_matrix"]], "inp_dim (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.inp_dim"]], "inp_dim (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.inp_dim"]], "inp_dim (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.inp_dim"]], "inp_dim (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.inp_dim"]], "inp_dim (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.inp_dim"]], "is_input_layer (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.is_input_layer"]], "is_input_layer (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.is_input_layer"]], "is_input_layer (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.is_input_layer"]], "latent_dim (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.latent_dim"]], "margin (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.margin"]], "message() (neuralkg_ind.model.gnnmodel.compgcn.compgcncov method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.message"]], "message() (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.message"]], "message() (neuralkg_ind.model.gnnmodel.rgcn.relgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RelGraphConv.message"]], "message() (neuralkg_ind.model.gnnmodel.layer.gnnlayer method)": [[0, "neuralkg_ind.model.GNNModel.layer.GNNLayer.message"]], "model_name (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.model_name"]], "module": [[0, "module-neuralkg_ind.model.GNNModel.CoMPILE"], [0, "module-neuralkg_ind.model.GNNModel.CompGCN"], [0, "module-neuralkg_ind.model.GNNModel.Grail"], [0, "module-neuralkg_ind.model.GNNModel.KBAT"], [0, "module-neuralkg_ind.model.GNNModel.MorsE"], [0, "module-neuralkg_ind.model.GNNModel.RGCN"], [0, "module-neuralkg_ind.model.GNNModel.RMPI"], [0, "module-neuralkg_ind.model.GNNModel.SEGNN"], [0, "module-neuralkg_ind.model.GNNModel.SNRI"], [0, "module-neuralkg_ind.model.GNNModel.XTransE"], [0, "module-neuralkg_ind.model.GNNModel.layer"], [0, "module-neuralkg_ind.model.GNNModel.model"], [3, "module-neuralkg_ind.model.KGEModel.BoxE"], [3, "module-neuralkg_ind.model.KGEModel.ComplEx"], [3, "module-neuralkg_ind.model.KGEModel.ConvE"], [3, "module-neuralkg_ind.model.KGEModel.CrossE"], [3, "module-neuralkg_ind.model.KGEModel.DistMult"], [3, "module-neuralkg_ind.model.KGEModel.DualE"], [3, "module-neuralkg_ind.model.KGEModel.HAKE"], [3, "module-neuralkg_ind.model.KGEModel.PairRE"], [3, "module-neuralkg_ind.model.KGEModel.RotatE"], [3, "module-neuralkg_ind.model.KGEModel.SimplE"], [3, "module-neuralkg_ind.model.KGEModel.TransE"], [3, "module-neuralkg_ind.model.KGEModel.TransH"], [3, "module-neuralkg_ind.model.KGEModel.TransR"], [3, "module-neuralkg_ind.model.KGEModel.model"], [6, "module-neuralkg_ind.data.DataPreprocess"], [6, "module-neuralkg_ind.data.Grounding"], [6, "module-neuralkg_ind.data.KGDataModule"], [6, "module-neuralkg_ind.data.RuleDataLoader"], [6, "module-neuralkg_ind.data.Sampler"], [6, "module-neuralkg_ind.data.base_data_module"], [7, "module-neuralkg_ind.eval_task.link_prediction"], [7, "module-neuralkg_ind.eval_task.triple_classification"], [8, "module-neuralkg_ind.lit_model.BaseLitModel"], [8, "module-neuralkg_ind.lit_model.CompGCNLitModel"], [8, "module-neuralkg_ind.lit_model.ConvELitModel"], [8, "module-neuralkg_ind.lit_model.CrossELitModel"], [8, "module-neuralkg_ind.lit_model.IterELitModel"], [8, "module-neuralkg_ind.lit_model.KBATLitModel"], [8, "module-neuralkg_ind.lit_model.KGELitModel"], [8, "module-neuralkg_ind.lit_model.MetaGNNLitModel"], [8, "module-neuralkg_ind.lit_model.RGCNLitModel"], [8, "module-neuralkg_ind.lit_model.RugELitModel"], [8, "module-neuralkg_ind.lit_model.SEGNNLitModel"], [8, "module-neuralkg_ind.lit_model.SNRILitModel"], [8, "module-neuralkg_ind.lit_model.XTransELitModel"], [8, "module-neuralkg_ind.lit_model.indGNNLitModel"], [9, "module-neuralkg_ind.loss.Adv_Loss"], [9, "module-neuralkg_ind.loss.ComplEx_NNE_AER_Loss"], [9, "module-neuralkg_ind.loss.CrossE_Loss"], [9, "module-neuralkg_ind.loss.Cross_Entropy_Loss"], [9, "module-neuralkg_ind.loss.KBAT_Loss"], [9, "module-neuralkg_ind.loss.Logsig_Loss"], [9, "module-neuralkg_ind.loss.Margin_Loss"], [9, "module-neuralkg_ind.loss.RGCN_Loss"], [9, "module-neuralkg_ind.loss.RugE_Loss"], [9, "module-neuralkg_ind.loss.SimplE_Loss"], [9, "module-neuralkg_ind.loss.Softplus_Loss"], [11, "module-neuralkg_ind.utils.setup_parser"], [11, "module-neuralkg_ind.utils.tools"], [13, "module-neuralkg_ind.model.RuleModel.ComplEx_NNE_AER"], [13, "module-neuralkg_ind.model.RuleModel.IterE"], [13, "module-neuralkg_ind.model.RuleModel.RugE"], [13, "module-neuralkg_ind.model.RuleModel.model"]], "n_e (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.n_e"]], "n_g (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.n_g"]], "nei_rel_path() (neuralkg_ind.model.gnnmodel.snri.snri method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.nei_rel_path"]], "neuralkg_ind.model.gnnmodel.compile": [[0, "module-neuralkg_ind.model.GNNModel.CoMPILE"]], "neuralkg_ind.model.gnnmodel.compgcn": [[0, "module-neuralkg_ind.model.GNNModel.CompGCN"]], "neuralkg_ind.model.gnnmodel.grail": [[0, "module-neuralkg_ind.model.GNNModel.Grail"]], "neuralkg_ind.model.gnnmodel.kbat": [[0, "module-neuralkg_ind.model.GNNModel.KBAT"]], "neuralkg_ind.model.gnnmodel.morse": [[0, "module-neuralkg_ind.model.GNNModel.MorsE"]], "neuralkg_ind.model.gnnmodel.rgcn": [[0, "module-neuralkg_ind.model.GNNModel.RGCN"]], "neuralkg_ind.model.gnnmodel.rmpi": [[0, "module-neuralkg_ind.model.GNNModel.RMPI"]], "neuralkg_ind.model.gnnmodel.segnn": [[0, "module-neuralkg_ind.model.GNNModel.SEGNN"]], "neuralkg_ind.model.gnnmodel.snri": [[0, "module-neuralkg_ind.model.GNNModel.SNRI"]], "neuralkg_ind.model.gnnmodel.xtranse": [[0, "module-neuralkg_ind.model.GNNModel.XTransE"]], "neuralkg_ind.model.gnnmodel.layer": [[0, "module-neuralkg_ind.model.GNNModel.layer"]], "neuralkg_ind.model.gnnmodel.model": [[0, "module-neuralkg_ind.model.GNNModel.model"]], "node_emb (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.node_emb"]], "nrelation (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.nrelation"]], "num_bases (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.num_bases"]], "num_bases (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.num_bases"]], "num_bases (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.num_bases"]], "num_rels (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.num_rels"]], "num_rels (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.num_rels"]], "num_rels (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.num_rels"]], "out_dim (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.out_dim"]], "out_dim (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.out_dim"]], "out_dim (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.out_dim"]], "output_dim (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.output_dim"]], "propagate() (neuralkg_ind.model.gnnmodel.grail.relattgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.propagate"]], "propagate() (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.propagate"]], "reduce_func() (neuralkg_ind.model.gnnmodel.compgcn.compgcncov method)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.reduce_func"]], "rel_emb (neuralkg_ind.model.gnnmodel.grail.grail attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail.rel_emb"]], "rel_emb (neuralkg_ind.model.gnnmodel.rmpi.rmpi attribute)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.rel_emb"]], "rel_emb (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.rel_emb"]], "rel_head_emb (neuralkg_ind.model.gnnmodel.morse.entinit attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit.rel_head_emb"]], "rel_tail_emb (neuralkg_ind.model.gnnmodel.morse.entinit attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit.rel_tail_emb"]], "relation_emb (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.relation_emb"]], "relation_embedding (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.relation_embedding"]], "rgcn (neuralkg_ind.model.gnnmodel.morse.morse attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.rgcn"]], "s_bias1 (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.s_bias1"]], "s_bias2 (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.s_bias2"]], "score_func() (neuralkg_ind.model.gnnmodel.xtranse.xtranse method)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.score_func"]], "self_loop_weight (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.self_loop_weight"]], "self_loop_weight (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.self_loop_weight"]], "self_loop_weight (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.self_loop_weight"]], "sparse_dense_mul() (neuralkg_ind.model.gnnmodel.rmpi.rmpi static method)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.sparse_dense_mul"]], "sparse_index_select() (neuralkg_ind.model.gnnmodel.rmpi.rmpi static method)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.sparse_index_select"]], "training (neuralkg_ind.model.gnnmodel.compile.compile attribute)": [[0, "neuralkg_ind.model.GNNModel.CoMPILE.CoMPILE.training"]], "training (neuralkg_ind.model.gnnmodel.compgcn.compgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCN.training"]], "training (neuralkg_ind.model.gnnmodel.compgcn.compgcncov attribute)": [[0, "neuralkg_ind.model.GNNModel.CompGCN.CompGCNCov.training"]], "training (neuralkg_ind.model.gnnmodel.grail.grail attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.Grail.training"]], "training (neuralkg_ind.model.gnnmodel.grail.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RGCN.training"]], "training (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.training"]], "training (neuralkg_ind.model.gnnmodel.kbat.graphattentionlayer attribute)": [[0, "neuralkg_ind.model.GNNModel.KBAT.GraphAttentionLayer.training"]], "training (neuralkg_ind.model.gnnmodel.kbat.kbat attribute)": [[0, "neuralkg_ind.model.GNNModel.KBAT.KBAT.training"]], "training (neuralkg_ind.model.gnnmodel.kbat.specialspmmfinal attribute)": [[0, "neuralkg_ind.model.GNNModel.KBAT.SpecialSpmmFinal.training"]], "training (neuralkg_ind.model.gnnmodel.morse.entinit attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.EntInit.training"]], "training (neuralkg_ind.model.gnnmodel.morse.kgemodel attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.KGEModel.training"]], "training (neuralkg_ind.model.gnnmodel.morse.morse attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.MorsE.training"]], "training (neuralkg_ind.model.gnnmodel.morse.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RGCN.training"]], "training (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.training"]], "training (neuralkg_ind.model.gnnmodel.rgcn.rgcn attribute)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.training"]], "training (neuralkg_ind.model.gnnmodel.rgcn.relgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RelGraphConv.training"]], "training (neuralkg_ind.model.gnnmodel.rmpi.rmpi attribute)": [[0, "neuralkg_ind.model.GNNModel.RMPI.RMPI.training"]], "training (neuralkg_ind.model.gnnmodel.segnn.complayer attribute)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.CompLayer.training"]], "training (neuralkg_ind.model.gnnmodel.segnn.edgelayer attribute)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.EdgeLayer.training"]], "training (neuralkg_ind.model.gnnmodel.segnn.nodelayer attribute)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.NodeLayer.training"]], "training (neuralkg_ind.model.gnnmodel.segnn.segnn attribute)": [[0, "neuralkg_ind.model.GNNModel.SEGNN.SEGNN.training"]], "training (neuralkg_ind.model.gnnmodel.snri.discriminator attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.training"]], "training (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.training"]], "training (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.training"]], "training (neuralkg_ind.model.gnnmodel.xtranse.xtranse attribute)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.training"]], "training (neuralkg_ind.model.gnnmodel.layer.aggregator attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.Aggregator.training"]], "training (neuralkg_ind.model.gnnmodel.layer.batchgru attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.BatchGRU.training"]], "training (neuralkg_ind.model.gnnmodel.layer.gnnlayer attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.GNNLayer.training"]], "training (neuralkg_ind.model.gnnmodel.layer.gruaggregator attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.GRUAggregator.training"]], "training (neuralkg_ind.model.gnnmodel.layer.mlpaggregator attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.MLPAggregator.training"]], "training (neuralkg_ind.model.gnnmodel.layer.sumaggregator attribute)": [[0, "neuralkg_ind.model.GNNModel.layer.SUMAggregator.training"]], "training (neuralkg_ind.model.gnnmodel.model.model attribute)": [[0, "neuralkg_ind.model.GNNModel.model.Model.training"]], "transe_func() (neuralkg_ind.model.gnnmodel.xtranse.xtranse method)": [[0, "neuralkg_ind.model.GNNModel.XTransE.XTransE.transe_func"]], "tri2emb() (neuralkg_ind.model.gnnmodel.rgcn.rgcn method)": [[0, "neuralkg_ind.model.GNNModel.RGCN.RGCN.tri2emb"]], "update_embedding() (neuralkg_ind.model.gnnmodel.layer.aggregator method)": [[0, "neuralkg_ind.model.GNNModel.layer.Aggregator.update_embedding"]], "update_embedding() (neuralkg_ind.model.gnnmodel.layer.gruaggregator method)": [[0, "neuralkg_ind.model.GNNModel.layer.GRUAggregator.update_embedding"]], "update_embedding() (neuralkg_ind.model.gnnmodel.layer.mlpaggregator method)": [[0, "neuralkg_ind.model.GNNModel.layer.MLPAggregator.update_embedding"]], "update_embedding() (neuralkg_ind.model.gnnmodel.layer.sumaggregator method)": [[0, "neuralkg_ind.model.GNNModel.layer.SUMAggregator.update_embedding"]], "w_comp (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.w_comp"]], "w_comp (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.w_comp"]], "w_comp (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.w_comp"]], "w_rel2ent (neuralkg_ind.model.gnnmodel.snri.snri attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.SNRI.w_rel2ent"]], "weight (neuralkg_ind.model.gnnmodel.grail.relattgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.Grail.RelAttGraphConv.weight"]], "weight (neuralkg_ind.model.gnnmodel.morse.relmorsgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.MorsE.RelMorsGraphConv.weight"]], "weight (neuralkg_ind.model.gnnmodel.snri.relcompgraphconv attribute)": [[0, "neuralkg_ind.model.GNNModel.SNRI.RelCompGraphConv.weight"]], "weights_init() (neuralkg_ind.model.gnnmodel.snri.discriminator method)": [[0, "neuralkg_ind.model.GNNModel.SNRI.Discriminator.weights_init"]], "boxe (class in neuralkg_ind.model.kgemodel.boxe)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE"]], "complex (class in neuralkg_ind.model.kgemodel.complex)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx"]], "conve (class in neuralkg_ind.model.kgemodel.conve)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE"]], "crosse (class in neuralkg_ind.model.kgemodel.crosse)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE"]], "distmult (class in neuralkg_ind.model.kgemodel.distmult)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult"]], "duale (class in neuralkg_ind.model.kgemodel.duale)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE"]], "hake (class in neuralkg_ind.model.kgemodel.hake)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE"]], "model (class in neuralkg_ind.model.kgemodel.model)": [[3, "neuralkg_ind.model.KGEModel.model.Model"]], "pairre (class in neuralkg_ind.model.kgemodel.pairre)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE"]], "rotate (class in neuralkg_ind.model.kgemodel.rotate)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE"]], "simple (class in neuralkg_ind.model.kgemodel.simple)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE"]], "transe (class in neuralkg_ind.model.kgemodel.transe)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE"]], "transh (class in neuralkg_ind.model.kgemodel.transh)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH"]], "transr (class in neuralkg_ind.model.kgemodel.transr)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR"]], "args (neuralkg_ind.model.kgemodel.boxe.boxe attribute)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.args"]], "args (neuralkg_ind.model.kgemodel.conve.conve attribute)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.args"]], "args (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.args"]], "args (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.args"]], "args (neuralkg_ind.model.kgemodel.duale.duale attribute)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.args"]], "args (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.args"]], "args (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.args"]], "args (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.args"]], "args (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.args"]], "args (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.args"]], "args (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.args"]], "args (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.args"]], "calc_score() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.calc_score"]], "concat() (neuralkg_ind.model.kgemodel.conve.conve method)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.concat"]], "dist() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.dist"]], "embedding_range (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.embedding_range"]], "embedding_range (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.embedding_range"]], "ent_emb (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.duale.duale attribute)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.ent_emb"]], "ent_emb (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.ent_emb"]], "ent_h_emb (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.ent_h_emb"]], "ent_t_emb (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.ent_t_emb"]], "epsilon (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.epsilon"]], "epsilon (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.epsilon"]], "forward() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.forward"]], "forward() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.forward"]], "forward() (neuralkg_ind.model.kgemodel.conve.conve method)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.forward"]], "forward() (neuralkg_ind.model.kgemodel.crosse.crosse method)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.forward"]], "forward() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.forward"]], "forward() (neuralkg_ind.model.kgemodel.duale.duale method)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.forward"]], "forward() (neuralkg_ind.model.kgemodel.hake.hake method)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.forward"]], "forward() (neuralkg_ind.model.kgemodel.pairre.pairre method)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.forward"]], "forward() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.forward"]], "forward() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.forward"]], "forward() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.forward"]], "forward() (neuralkg_ind.model.kgemodel.transh.transh method)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.forward"]], "forward() (neuralkg_ind.model.kgemodel.transr.transr method)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.forward"]], "forward() (neuralkg_ind.model.kgemodel.model.model method)": [[3, "neuralkg_ind.model.KGEModel.model.Model.forward"]], "get_emb() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.get_emb"]], "get_score() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.conve.conve method)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.crosse.crosse method)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.duale.duale method)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.hake.hake method)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.pairre.pairre method)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.transh.transh method)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.get_score"]], "get_score() (neuralkg_ind.model.kgemodel.transr.transr method)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.get_score"]], "h_weighted_vector (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.h_weighted_vector"]], "hr_bias (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.hr_bias"]], "init_emb() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.conve.conve method)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.crosse.crosse method)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.hake.hake method)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.pairre.pairre method)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.transh.transh method)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.transr.transr method)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.init_emb"]], "init_emb() (neuralkg_ind.model.kgemodel.model.model method)": [[3, "neuralkg_ind.model.KGEModel.model.Model.init_emb"]], "init_weights() (neuralkg_ind.model.kgemodel.duale.duale method)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.init_weights"]], "l2_loss() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.l2_loss"]], "mapping_embedding() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.mapping_embedding"]], "mapping_embedding() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.mapping_embedding"]], "mapping_embedding() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.mapping_embedding"]], "mapping_embedding() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.mapping_embedding"]], "margin (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.margin"]], "margin (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.margin"]], "margin (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.margin"]], "margin (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.margin"]], "margin (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.margin"]], "margin (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.margin"]], "margin (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.margin"]], "margin (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.margin"]], "modules_weight (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.modules_weight"]], "neuralkg_ind.model.kgemodel.boxe": [[3, "module-neuralkg_ind.model.KGEModel.BoxE"]], "neuralkg_ind.model.kgemodel.complex": [[3, "module-neuralkg_ind.model.KGEModel.ComplEx"]], "neuralkg_ind.model.kgemodel.conve": [[3, "module-neuralkg_ind.model.KGEModel.ConvE"]], "neuralkg_ind.model.kgemodel.crosse": [[3, "module-neuralkg_ind.model.KGEModel.CrossE"]], "neuralkg_ind.model.kgemodel.distmult": [[3, "module-neuralkg_ind.model.KGEModel.DistMult"]], "neuralkg_ind.model.kgemodel.duale": [[3, "module-neuralkg_ind.model.KGEModel.DualE"]], "neuralkg_ind.model.kgemodel.hake": [[3, "module-neuralkg_ind.model.KGEModel.HAKE"]], "neuralkg_ind.model.kgemodel.pairre": [[3, "module-neuralkg_ind.model.KGEModel.PairRE"]], "neuralkg_ind.model.kgemodel.rotate": [[3, "module-neuralkg_ind.model.KGEModel.RotatE"]], "neuralkg_ind.model.kgemodel.simple": [[3, "module-neuralkg_ind.model.KGEModel.SimplE"]], "neuralkg_ind.model.kgemodel.transe": [[3, "module-neuralkg_ind.model.KGEModel.TransE"]], "neuralkg_ind.model.kgemodel.transh": [[3, "module-neuralkg_ind.model.KGEModel.TransH"]], "neuralkg_ind.model.kgemodel.transr": [[3, "module-neuralkg_ind.model.KGEModel.TransR"]], "neuralkg_ind.model.kgemodel.model": [[3, "module-neuralkg_ind.model.KGEModel.model"]], "norm_vector (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.norm_vector"]], "phase_weight (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.phase_weight"]], "quaternion_init() (neuralkg_ind.model.kgemodel.duale.duale method)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.quaternion_init"]], "regularize_loss() (neuralkg_ind.model.kgemodel.crosse.crosse method)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.regularize_loss"]], "rel_emb (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.duale.duale attribute)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.rel_emb"]], "rel_emb (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.rel_emb"]], "rel_inv_emb (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.rel_inv_emb"]], "rel_reverse_emb (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.rel_reverse_emb"]], "score_embedding() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.score_embedding"]], "score_embedding() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.score_embedding"]], "score_embedding() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.score_embedding"]], "score_embedding() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.score_embedding"]], "score_func() (neuralkg_ind.model.kgemodel.boxe.boxe method)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.complex.complex method)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.conve.conve method)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.crosse.crosse method)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.distmult.distmult method)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.duale.duale method)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.hake.hake method)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.pairre.pairre method)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.rotate.rotate method)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.simple.simple method)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.transe.transe method)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.transh.transh method)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.transr.transr method)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.score_func"]], "score_func() (neuralkg_ind.model.kgemodel.model.model method)": [[3, "neuralkg_ind.model.KGEModel.model.Model.score_func"]], "t_weighted_vector (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.t_weighted_vector"]], "tr_bias (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.tr_bias"]], "training (neuralkg_ind.model.kgemodel.boxe.boxe attribute)": [[3, "neuralkg_ind.model.KGEModel.BoxE.BoxE.training"]], "training (neuralkg_ind.model.kgemodel.complex.complex attribute)": [[3, "neuralkg_ind.model.KGEModel.ComplEx.ComplEx.training"]], "training (neuralkg_ind.model.kgemodel.conve.conve attribute)": [[3, "neuralkg_ind.model.KGEModel.ConvE.ConvE.training"]], "training (neuralkg_ind.model.kgemodel.crosse.crosse attribute)": [[3, "neuralkg_ind.model.KGEModel.CrossE.CrossE.training"]], "training (neuralkg_ind.model.kgemodel.distmult.distmult attribute)": [[3, "neuralkg_ind.model.KGEModel.DistMult.DistMult.training"]], "training (neuralkg_ind.model.kgemodel.duale.duale attribute)": [[3, "neuralkg_ind.model.KGEModel.DualE.DualE.training"]], "training (neuralkg_ind.model.kgemodel.hake.hake attribute)": [[3, "neuralkg_ind.model.KGEModel.HAKE.HAKE.training"]], "training (neuralkg_ind.model.kgemodel.pairre.pairre attribute)": [[3, "neuralkg_ind.model.KGEModel.PairRE.PairRE.training"]], "training (neuralkg_ind.model.kgemodel.rotate.rotate attribute)": [[3, "neuralkg_ind.model.KGEModel.RotatE.RotatE.training"]], "training (neuralkg_ind.model.kgemodel.simple.simple attribute)": [[3, "neuralkg_ind.model.KGEModel.SimplE.SimplE.training"]], "training (neuralkg_ind.model.kgemodel.transe.transe attribute)": [[3, "neuralkg_ind.model.KGEModel.TransE.TransE.training"]], "training (neuralkg_ind.model.kgemodel.transh.transh attribute)": [[3, "neuralkg_ind.model.KGEModel.TransH.TransH.training"]], "training (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.training"]], "training (neuralkg_ind.model.kgemodel.model.model attribute)": [[3, "neuralkg_ind.model.KGEModel.model.Model.training"]], "transfer_matrix (neuralkg_ind.model.kgemodel.transr.transr attribute)": [[3, "neuralkg_ind.model.KGEModel.TransR.TransR.transfer_matrix"]], "tri2emb() (neuralkg_ind.model.kgemodel.model.model method)": [[3, "neuralkg_ind.model.KGEModel.model.Model.tri2emb"]], "advsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.AdvSampler"]], "allsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.AllSampler"]], "basedatamodule (class in neuralkg_ind.data.base_data_module)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule"]], "basegraph (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph"]], "basemeta (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.BaseMeta"]], "basesampler (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler"]], "bernsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.BernSampler"]], "compgcnsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler"]], "compgcntestsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler"]], "config (class in neuralkg_ind.data.base_data_module)": [[6, "neuralkg_ind.data.base_data_module.Config"]], "convsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.ConvSampler"]], "crossesampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.CrossESampler"]], "grdata (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.GRData"]], "graphsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.GraphSampler"]], "graphtestsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler"]], "groundallrules (class in neuralkg_ind.data.grounding)": [[6, "neuralkg_ind.data.Grounding.GroundAllRules"]], "kbatsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.KBATSampler"]], "kgdata (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.KGData"]], "kgdatamodule (class in neuralkg_ind.data.kgdatamodule)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule"]], "kgdataset (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.KGDataset"]], "kgeevaldata (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData"]], "metasampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.MetaSampler"]], "metatraingrdata (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.MetaTrainGRData"]], "metavalidgrdata (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.MetaValidGRData"]], "propositionalizerule() (neuralkg_ind.data.grounding.groundallrules method)": [[6, "neuralkg_ind.data.Grounding.GroundAllRules.PropositionalizeRule"]], "rmpisampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.RMPISampler"]], "relsub2obj (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.RelSub2Obj"]], "relation2tuple (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.Relation2Tuple"]], "revsampler (class in neuralkg_ind.data.datapreprocess)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler"]], "ruledataloader (class in neuralkg_ind.data.ruledataloader)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader"]], "ruledataset (class in neuralkg_ind.data.ruledataloader)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataset"]], "segnntestsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.SEGNNTestSampler"]], "segnntrainprocess (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainProcess"]], "segnntrainsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainSampler"]], "subsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.SubSampler"]], "testmetasampler_auc (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_auc"]], "testmetasampler_hit (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_hit"]], "testrmpisampler_auc (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_auc"]], "testrmpisampler_hit (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit"]], "testsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestSampler"]], "testsampler_auc (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestSampler_auc"]], "testsampler_hit (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit"]], "traintriples (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.TrainTriples"]], "unisampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.UniSampler"]], "validmetasampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.ValidMetaSampler"]], "validrmpisampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.ValidRMPISampler"]], "validsampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.ValidSampler"]], "xtransesampler (class in neuralkg_ind.data.sampler)": [[6, "neuralkg_ind.data.Sampler.XTransESampler"]], "add_reverse_relation() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.add_reverse_relation"]], "add_reverse_triples() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.add_reverse_triples"]], "add_to_argparse() (neuralkg_ind.data.base_data_module.basedatamodule static method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.add_to_argparse"]], "adj_matrix (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.adj_matrix"]], "all_true_triples (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.all_true_triples"]], "args (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.args"]], "args (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.args"]], "args (neuralkg_ind.data.sampler.testrmpisampler_auc attribute)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_auc.args"]], "args (neuralkg_ind.data.sampler.testrmpisampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.args"]], "args (neuralkg_ind.data.sampler.testsampler_auc attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_auc.args"]], "args (neuralkg_ind.data.sampler.testsampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.args"]], "args (neuralkg_ind.data.sampler.validrmpisampler attribute)": [[6, "neuralkg_ind.data.Sampler.ValidRMPISampler.args"]], "args (neuralkg_ind.data.sampler.validsampler attribute)": [[6, "neuralkg_ind.data.Sampler.ValidSampler.args"]], "batch_size (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.batch_size"]], "bfs() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.bfs"]], "build_graph() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.build_graph"]], "calc_bern() (neuralkg_ind.data.sampler.bernsampler method)": [[6, "neuralkg_ind.data.Sampler.BernSampler.calc_bern"]], "calc_freq() (neuralkg_ind.data.sampler.advsampler method)": [[6, "neuralkg_ind.data.Sampler.AdvSampler.calc_freq"]], "collate_fn() (neuralkg_ind.data.datapreprocess.kgeevaldata static method)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.collate_fn"]], "comp_deg_norm() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.comp_deg_norm"]], "construct_kg() (neuralkg_ind.data.sampler.segnntrainprocess method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainProcess.construct_kg"]], "corrupt_head() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.corrupt_head"]], "corrupt_head() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.corrupt_head"]], "corrupt_tail() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.corrupt_tail"]], "corrupt_tail() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.corrupt_tail"]], "count_frequency() (neuralkg_ind.data.datapreprocess.kgdata static method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.count_frequency"]], "cross_sampling_flag (neuralkg_ind.data.sampler.unisampler attribute)": [[6, "neuralkg_ind.data.Sampler.UniSampler.cross_sampling_flag"]], "dataset (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.dataset"]], "db_name_neg (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.db_name_neg"]], "db_name_pos (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.db_name_pos"]], "drop_last (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.drop_last"]], "ent2id (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.ent2id"]], "entity (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.entity"]], "generate_ind_test() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.generate_ind_test"]], "generate_train() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.generate_train"]], "generate_valid() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.generate_valid"]], "get_all_true_triples() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.get_all_true_triples"]], "get_all_true_triples() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.get_all_true_triples"]], "get_batch_nhop_neighbors_all() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.get_batch_nhop_neighbors_all"]], "get_config() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.get_config"]], "get_data_config() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.get_data_config"]], "get_h2rt_t2hr_from_train() (neuralkg_ind.data.datapreprocess.kgdata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.get_h2rt_t2hr_from_train"]], "get_h2rt_t2hr_from_train() (neuralkg_ind.data.sampler.segnntrainprocess method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainProcess.get_h2rt_t2hr_from_train"]], "get_hr2t_rt2h_from_all() (neuralkg_ind.data.sampler.compgcntestsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.get_hr2t_rt2h_from_all"]], "get_hr2t_rt2h_from_all() (neuralkg_ind.data.sampler.graphtestsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.get_hr2t_rt2h_from_all"]], "get_hr2t_rt2h_from_all() (neuralkg_ind.data.sampler.segnntestsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTestSampler.get_hr2t_rt2h_from_all"]], "get_hr2t_rt2h_from_all() (neuralkg_ind.data.sampler.testsampler method)": [[6, "neuralkg_ind.data.Sampler.TestSampler.get_hr2t_rt2h_from_all"]], "get_hr2t_rt2h_from_train() (neuralkg_ind.data.datapreprocess.kgdata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.get_hr2t_rt2h_from_train"]], "get_hr_trian() (neuralkg_ind.data.datapreprocess.kgdata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.get_hr_trian"]], "get_id() (neuralkg_ind.data.datapreprocess.kgdata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.get_id"]], "get_label() (neuralkg_ind.data.datapreprocess.kgeevaldata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.get_label"]], "get_neg_samples_replacing_head_tail() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.get_neg_samples_replacing_head_tail"]], "get_neighbors() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.get_neighbors"]], "get_onehot_label() (neuralkg_ind.data.sampler.segnntrainprocess method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainProcess.get_onehot_label"]], "get_sampling() (neuralkg_ind.data.sampler.segnntrainprocess method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainProcess.get_sampling"]], "get_sampling_keys() (neuralkg_ind.data.sampler.compgcnsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.compgcntestsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.graphtestsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.metasampler method)": [[6, "neuralkg_ind.data.Sampler.MetaSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.rmpisampler method)": [[6, "neuralkg_ind.data.Sampler.RMPISampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.segnntestsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTestSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.subsampler method)": [[6, "neuralkg_ind.data.Sampler.SubSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testmetasampler_auc method)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_auc.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testmetasampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_hit.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testrmpisampler_auc method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_auc.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testrmpisampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testsampler method)": [[6, "neuralkg_ind.data.Sampler.TestSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.testsampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.unisampler method)": [[6, "neuralkg_ind.data.Sampler.UniSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.validmetasampler method)": [[6, "neuralkg_ind.data.Sampler.ValidMetaSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.validrmpisampler method)": [[6, "neuralkg_ind.data.Sampler.ValidRMPISampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.validsampler method)": [[6, "neuralkg_ind.data.Sampler.ValidSampler.get_sampling_keys"]], "get_sampling_keys() (neuralkg_ind.data.sampler.xtransesampler method)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.get_sampling_keys"]], "get_subgraphs() (neuralkg_ind.data.sampler.testrmpisampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.get_subgraphs"]], "get_subgraphs() (neuralkg_ind.data.sampler.testsampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.get_subgraphs"]], "get_test() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.get_test"]], "get_test() (neuralkg_ind.data.datapreprocess.basemeta method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseMeta.get_test"]], "get_test() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.get_test"]], "get_test() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.get_test"]], "get_test() (neuralkg_ind.data.sampler.segnntrainsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainSampler.get_test"]], "get_train() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.get_train"]], "get_train() (neuralkg_ind.data.datapreprocess.basemeta method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseMeta.get_train"]], "get_train() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.get_train"]], "get_train() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.get_train"]], "get_train() (neuralkg_ind.data.sampler.segnntrainsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainSampler.get_train"]], "get_train_bs() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.get_train_bs"]], "get_triples_id() (neuralkg_ind.data.datapreprocess.kgdata method)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.get_triples_id"]], "get_unique_entity() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.get_unique_entity"]], "get_valid() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.get_valid"]], "get_valid() (neuralkg_ind.data.datapreprocess.basemeta method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseMeta.get_valid"]], "get_valid() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.get_valid"]], "get_valid() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.get_valid"]], "get_valid() (neuralkg_ind.data.sampler.segnntrainsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainSampler.get_valid"]], "graph (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.graph"]], "graph (neuralkg_ind.data.sampler.compgcnsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.graph"]], "graph (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.graph"]], "graph (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.graph"]], "groundrule() (neuralkg_ind.data.grounding.groundallrules method)": [[6, "neuralkg_ind.data.Grounding.GroundAllRules.groundRule"]], "h2rt_train (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.h2rt_train"]], "h_mask (neuralkg_ind.data.sampler.xtransesampler attribute)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.h_mask"]], "h_neighbor (neuralkg_ind.data.sampler.xtransesampler attribute)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.h_neighbor"]], "head_batch() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.head_batch"]], "head_batch() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.head_batch"]], "hr2t (neuralkg_ind.data.datapreprocess.kgeevaldata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.hr2t"]], "hr2t_all (neuralkg_ind.data.sampler.compgcntestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.hr2t_all"]], "hr2t_all (neuralkg_ind.data.sampler.graphtestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.hr2t_all"]], "hr2t_all (neuralkg_ind.data.sampler.testsampler attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler.hr2t_all"]], "hr2t_train (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.hr2t_train"]], "hr2t_train (neuralkg_ind.data.datapreprocess.revsampler attribute)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.hr2t_train"]], "id2ent (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.id2ent"]], "id2entity (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.id2entity"]], "id2rel (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.id2rel"]], "id2relation (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.id2relation"]], "init_label() (neuralkg_ind.data.sampler.crossesampler method)": [[6, "neuralkg_ind.data.Sampler.CrossESampler.init_label"]], "label (neuralkg_ind.data.sampler.compgcnsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.label"]], "label (neuralkg_ind.data.sampler.convsampler attribute)": [[6, "neuralkg_ind.data.Sampler.ConvSampler.label"]], "label (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.label"]], "label (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.label"]], "lef_mean (neuralkg_ind.data.sampler.bernsampler attribute)": [[6, "neuralkg_ind.data.Sampler.BernSampler.lef_mean"]], "load_data_grail() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.load_data_grail"]], "load_data_grail_ind() (neuralkg_ind.data.datapreprocess.basegraph method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseGraph.load_data_grail_ind"]], "load_ind_data_grail() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.load_ind_data_grail"]], "m_h2r (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.m_h2r"]], "m_h2r (neuralkg_ind.data.sampler.testsampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.m_h2r"]], "m_t2r (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.m_t2r"]], "m_t2r (neuralkg_ind.data.sampler.testsampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.m_t2r"]], "max_neighbor (neuralkg_ind.data.sampler.xtransesampler attribute)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.max_neighbor"]], "n_hop (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.n_hop"]], "neg_sample (neuralkg_ind.data.sampler.xtransesampler attribute)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.neg_sample"]], "neighbours (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.neighbours"]], "neuralkg_ind.data.datapreprocess": [[6, "module-neuralkg_ind.data.DataPreprocess"]], "neuralkg_ind.data.grounding": [[6, "module-neuralkg_ind.data.Grounding"]], "neuralkg_ind.data.kgdatamodule": [[6, "module-neuralkg_ind.data.KGDataModule"]], "neuralkg_ind.data.ruledataloader": [[6, "module-neuralkg_ind.data.RuleDataLoader"]], "neuralkg_ind.data.sampler": [[6, "module-neuralkg_ind.data.Sampler"]], "neuralkg_ind.data.base_data_module": [[6, "module-neuralkg_ind.data.base_data_module"]], "node_norm_to_edge_norm() (neuralkg_ind.data.sampler.compgcnsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.node_norm_to_edge_norm"]], "node_norm_to_edge_norm() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.node_norm_to_edge_norm"]], "norm (neuralkg_ind.data.sampler.compgcnsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.norm"]], "norm (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.norm"]], "num_cand (neuralkg_ind.data.datapreprocess.kgeevaldata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.num_cand"]], "num_ent (neuralkg_ind.data.datapreprocess.kgeevaldata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.num_ent"]], "num_ent (neuralkg_ind.data.sampler.compgcntestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.num_ent"]], "num_ent (neuralkg_ind.data.sampler.graphtestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.num_ent"]], "num_ent (neuralkg_ind.data.sampler.testsampler attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler.num_ent"]], "num_workers (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.num_workers"]], "pin_memory (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.pin_memory"]], "prefetch_factor (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.prefetch_factor"]], "prepare_data() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.prepare_data"]], "prepare_data() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.prepare_data"]], "prepare_features() (neuralkg_ind.data.sampler.testrmpisampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.prepare_features"]], "prepare_features() (neuralkg_ind.data.sampler.testsampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.prepare_features"]], "prepare_features_new() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.prepare_features_new"]], "prepare_subgraph() (neuralkg_ind.data.sampler.testrmpisampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.prepare_subgraph"]], "prepare_subgraphs() (neuralkg_ind.data.datapreprocess.grdata method)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.prepare_subgraphs"]], "readdata() (neuralkg_ind.data.grounding.groundallrules method)": [[6, "neuralkg_ind.data.Grounding.GroundAllRules.readData"]], "rel2id (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.rel2id"]], "relation (neuralkg_ind.data.sampler.compgcnsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.relation"]], "relation (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.relation"]], "rig_mean (neuralkg_ind.data.sampler.bernsampler attribute)": [[6, "neuralkg_ind.data.Sampler.BernSampler.rig_mean"]], "rt2h (neuralkg_ind.data.datapreprocess.kgeevaldata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.rt2h"]], "rt2h_all (neuralkg_ind.data.sampler.compgcntestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.rt2h_all"]], "rt2h_all (neuralkg_ind.data.sampler.graphtestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.rt2h_all"]], "rt2h_all (neuralkg_ind.data.sampler.testsampler attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler.rt2h_all"]], "rt2h_train (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.rt2h_train"]], "rt2h_train (neuralkg_ind.data.datapreprocess.revsampler attribute)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.rt2h_train"]], "sam_negative() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.sam_negative"]], "sampler (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.sampler"]], "sampler (neuralkg_ind.data.sampler.compgcntestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.sampler"]], "sampler (neuralkg_ind.data.sampler.graphtestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.sampler"]], "sampler (neuralkg_ind.data.sampler.testrmpisampler_auc attribute)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_auc.sampler"]], "sampler (neuralkg_ind.data.sampler.testrmpisampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.sampler"]], "sampler (neuralkg_ind.data.sampler.testsampler attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler.sampler"]], "sampler (neuralkg_ind.data.sampler.testsampler_auc attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_auc.sampler"]], "sampler (neuralkg_ind.data.sampler.testsampler_hit attribute)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.sampler"]], "sampler (neuralkg_ind.data.sampler.validrmpisampler attribute)": [[6, "neuralkg_ind.data.Sampler.ValidRMPISampler.sampler"]], "sampler (neuralkg_ind.data.sampler.validsampler attribute)": [[6, "neuralkg_ind.data.Sampler.ValidSampler.sampler"]], "sampling() (neuralkg_ind.data.sampler.advsampler method)": [[6, "neuralkg_ind.data.Sampler.AdvSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.allsampler method)": [[6, "neuralkg_ind.data.Sampler.AllSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.bernsampler method)": [[6, "neuralkg_ind.data.Sampler.BernSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.compgcnsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.compgcntestsampler method)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.convsampler method)": [[6, "neuralkg_ind.data.Sampler.ConvSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.crossesampler method)": [[6, "neuralkg_ind.data.Sampler.CrossESampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.graphtestsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.metasampler method)": [[6, "neuralkg_ind.data.Sampler.MetaSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.rmpisampler method)": [[6, "neuralkg_ind.data.Sampler.RMPISampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.segnntestsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTestSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.segnntrainsampler method)": [[6, "neuralkg_ind.data.Sampler.SEGNNTrainSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.subsampler method)": [[6, "neuralkg_ind.data.Sampler.SubSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.testmetasampler_auc method)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_auc.sampling"]], "sampling() (neuralkg_ind.data.sampler.testmetasampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestMetaSampler_hit.sampling"]], "sampling() (neuralkg_ind.data.sampler.testrmpisampler_auc method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_auc.sampling"]], "sampling() (neuralkg_ind.data.sampler.testrmpisampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestRMPISampler_hit.sampling"]], "sampling() (neuralkg_ind.data.sampler.testsampler method)": [[6, "neuralkg_ind.data.Sampler.TestSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.testsampler_auc method)": [[6, "neuralkg_ind.data.Sampler.TestSampler_auc.sampling"]], "sampling() (neuralkg_ind.data.sampler.testsampler_hit method)": [[6, "neuralkg_ind.data.Sampler.TestSampler_hit.sampling"]], "sampling() (neuralkg_ind.data.sampler.unisampler method)": [[6, "neuralkg_ind.data.Sampler.UniSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.validmetasampler method)": [[6, "neuralkg_ind.data.Sampler.ValidMetaSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.validrmpisampler method)": [[6, "neuralkg_ind.data.Sampler.ValidRMPISampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.validsampler method)": [[6, "neuralkg_ind.data.Sampler.ValidSampler.sampling"]], "sampling() (neuralkg_ind.data.sampler.xtransesampler method)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.sampling"]], "sampling_keys() (neuralkg_ind.data.sampler.allsampler method)": [[6, "neuralkg_ind.data.Sampler.AllSampler.sampling_keys"]], "sampling_keys() (neuralkg_ind.data.sampler.bernsampler static method)": [[6, "neuralkg_ind.data.Sampler.BernSampler.sampling_keys"]], "sampling_keys() (neuralkg_ind.data.sampler.convsampler method)": [[6, "neuralkg_ind.data.Sampler.ConvSampler.sampling_keys"]], "sampling_keys() (neuralkg_ind.data.sampler.crossesampler method)": [[6, "neuralkg_ind.data.Sampler.CrossESampler.sampling_keys"]], "sampling_negative() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.sampling_negative"]], "sampling_negative() (neuralkg_ind.data.sampler.kbatsampler method)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.sampling_negative"]], "sampling_positive() (neuralkg_ind.data.sampler.graphsampler method)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.sampling_positive"]], "setup() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.setup"]], "setup() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.setup"]], "ssp_graph (neuralkg_ind.data.datapreprocess.grdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.GRData.ssp_graph"]], "subgraphs_db (neuralkg_ind.data.datapreprocess.metatraingrdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.MetaTrainGRData.subgraphs_db"]], "subgraphs_db (neuralkg_ind.data.datapreprocess.metavalidgrdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.MetaValidGRData.subgraphs_db"]], "t2rh_train (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.t2rh_train"]], "tail_batch() (neuralkg_ind.data.datapreprocess.basesampler method)": [[6, "neuralkg_ind.data.DataPreprocess.BaseSampler.tail_batch"]], "tail_batch() (neuralkg_ind.data.datapreprocess.revsampler method)": [[6, "neuralkg_ind.data.DataPreprocess.RevSampler.tail_batch"]], "test_dataloader() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.test_dataloader"]], "test_dataloader() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.test_dataloader"]], "test_triples (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.test_triples"]], "timeout (neuralkg_ind.data.ruledataloader.ruledataloader attribute)": [[6, "neuralkg_ind.data.RuleDataLoader.RuleDataLoader.timeout"]], "train_dataloader() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.train_dataloader"]], "train_dataloader() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.train_dataloader"]], "train_triples (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.train_triples"]], "triples (neuralkg_ind.data.datapreprocess.kgeevaldata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGEEvalData.triples"]], "triples (neuralkg_ind.data.sampler.compgcnsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNSampler.triples"]], "triples (neuralkg_ind.data.sampler.compgcntestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.CompGCNTestSampler.triples"]], "triples (neuralkg_ind.data.sampler.convsampler attribute)": [[6, "neuralkg_ind.data.Sampler.ConvSampler.triples"]], "triples (neuralkg_ind.data.sampler.graphsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphSampler.triples"]], "triples (neuralkg_ind.data.sampler.graphtestsampler attribute)": [[6, "neuralkg_ind.data.Sampler.GraphTestSampler.triples"]], "triples (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.triples"]], "triples (neuralkg_ind.data.sampler.xtransesampler attribute)": [[6, "neuralkg_ind.data.Sampler.XTransESampler.triples"]], "triples_con (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.triples_Con"]], "triples_gat_neg (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.triples_GAT_neg"]], "triples_gat_pos (neuralkg_ind.data.sampler.kbatsampler attribute)": [[6, "neuralkg_ind.data.Sampler.KBATSampler.triples_GAT_pos"]], "uni_sampling() (neuralkg_ind.data.sampler.unisampler method)": [[6, "neuralkg_ind.data.Sampler.UniSampler.uni_sampling"]], "val_dataloader() (neuralkg_ind.data.kgdatamodule.kgdatamodule method)": [[6, "neuralkg_ind.data.KGDataModule.KGDataModule.val_dataloader"]], "val_dataloader() (neuralkg_ind.data.base_data_module.basedatamodule method)": [[6, "neuralkg_ind.data.base_data_module.BaseDataModule.val_dataloader"]], "valid_triples (neuralkg_ind.data.datapreprocess.kgdata attribute)": [[6, "neuralkg_ind.data.DataPreprocess.KGData.valid_triples"]], "calc_ranks() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.calc_ranks"]], "calc_ranks_segnn() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.calc_ranks_SEGNN"]], "classification() (in module neuralkg_ind.eval_task.triple_classification)": [[7, "neuralkg_ind.eval_task.triple_classification.classification"]], "head_predict() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.head_predict"]], "head_predict_segnn() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.head_predict_SEGNN"]], "ind_predict() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.ind_predict"]], "link_predict() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.link_predict"]], "link_predict_segnn() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.link_predict_SEGNN"]], "neuralkg_ind.eval_task.link_prediction": [[7, "module-neuralkg_ind.eval_task.link_prediction"]], "neuralkg_ind.eval_task.triple_classification": [[7, "module-neuralkg_ind.eval_task.triple_classification"]], "tail_predict() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.tail_predict"]], "tail_predict_segnn() (in module neuralkg_ind.eval_task.link_prediction)": [[7, "neuralkg_ind.eval_task.link_prediction.tail_predict_SEGNN"]], "baselitmodel (class in neuralkg_ind.lit_model.baselitmodel)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel"]], "compgcnlitmodel (class in neuralkg_ind.lit_model.compgcnlitmodel)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel"]], "config (class in neuralkg_ind.lit_model.baselitmodel)": [[8, "neuralkg_ind.lit_model.BaseLitModel.Config"]], "convelitmodel (class in neuralkg_ind.lit_model.convelitmodel)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel"]], "crosselitmodel (class in neuralkg_ind.lit_model.crosselitmodel)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel"]], "iterelitmodel (class in neuralkg_ind.lit_model.iterelitmodel)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel"]], "kbatlitmodel (class in neuralkg_ind.lit_model.kbatlitmodel)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel"]], "kgelitmodel (class in neuralkg_ind.lit_model.kgelitmodel)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel"]], "metagnnlitmodel (class in neuralkg_ind.lit_model.metagnnlitmodel)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel"]], "rgcnlitmodel (class in neuralkg_ind.lit_model.rgcnlitmodel)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel"]], "rugelitmodel (class in neuralkg_ind.lit_model.rugelitmodel)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel"]], "segnnlitmodel (class in neuralkg_ind.lit_model.segnnlitmodel)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel"]], "snrilitmodel (class in neuralkg_ind.lit_model.snrilitmodel)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel"]], "xtranselitmodel (class in neuralkg_ind.lit_model.xtranselitmodel)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel"]], "add_to_argparse() (neuralkg_ind.lit_model.baselitmodel.baselitmodel static method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.add_to_argparse"]], "add_to_argparse() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel static method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.add_to_argparse"]], "add_to_argparse() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel static method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.add_to_argparse"]], "add_to_argparse() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel static method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.add_to_argparse"]], "add_to_argparse() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel static method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.add_to_argparse"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.convelitmodel.convelitmodel attribute)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel attribute)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel attribute)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel attribute)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel attribute)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel attribute)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel attribute)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel attribute)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.allow_zero_length_dataloader_with_multiple_devices"]], "allow_zero_length_dataloader_with_multiple_devices (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.allow_zero_length_dataloader_with_multiple_devices"]], "configure_optimizers() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.configure_optimizers"]], "configure_optimizers() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.configure_optimizers"]], "forward() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.forward"]], "forward() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.forward"]], "forward() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.forward"]], "forward() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.forward"]], "forward() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.forward"]], "forward() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.forward"]], "forward() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.forward"]], "forward() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.forward"]], "forward() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.forward"]], "forward() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.forward"]], "forward() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.forward"]], "forward() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.forward"]], "forward() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.forward"]], "forward() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.forward"]], "get_auc() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.get_auc"]], "get_kg() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.get_kg"]], "get_results() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.get_results"]], "indgnnlitmodel (class in neuralkg_ind.lit_model.indgnnlitmodel)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel"]], "neuralkg_ind.lit_model.baselitmodel": [[8, "module-neuralkg_ind.lit_model.BaseLitModel"]], "neuralkg_ind.lit_model.compgcnlitmodel": [[8, "module-neuralkg_ind.lit_model.CompGCNLitModel"]], "neuralkg_ind.lit_model.convelitmodel": [[8, "module-neuralkg_ind.lit_model.ConvELitModel"]], "neuralkg_ind.lit_model.crosselitmodel": [[8, "module-neuralkg_ind.lit_model.CrossELitModel"]], "neuralkg_ind.lit_model.iterelitmodel": [[8, "module-neuralkg_ind.lit_model.IterELitModel"]], "neuralkg_ind.lit_model.kbatlitmodel": [[8, "module-neuralkg_ind.lit_model.KBATLitModel"]], "neuralkg_ind.lit_model.kgelitmodel": [[8, "module-neuralkg_ind.lit_model.KGELitModel"]], "neuralkg_ind.lit_model.metagnnlitmodel": [[8, "module-neuralkg_ind.lit_model.MetaGNNLitModel"]], "neuralkg_ind.lit_model.rgcnlitmodel": [[8, "module-neuralkg_ind.lit_model.RGCNLitModel"]], "neuralkg_ind.lit_model.rugelitmodel": [[8, "module-neuralkg_ind.lit_model.RugELitModel"]], "neuralkg_ind.lit_model.segnnlitmodel": [[8, "module-neuralkg_ind.lit_model.SEGNNLitModel"]], "neuralkg_ind.lit_model.snrilitmodel": [[8, "module-neuralkg_ind.lit_model.SNRILitModel"]], "neuralkg_ind.lit_model.xtranselitmodel": [[8, "module-neuralkg_ind.lit_model.XTransELitModel"]], "neuralkg_ind.lit_model.indgnnlitmodel": [[8, "module-neuralkg_ind.lit_model.indGNNLitModel"]], "precision (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.precision"]], "precision (neuralkg_ind.lit_model.convelitmodel.convelitmodel attribute)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.precision"]], "precision (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel attribute)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.precision"]], "precision (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel attribute)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.precision"]], "precision (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel attribute)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.precision"]], "precision (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel attribute)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.precision"]], "precision (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.precision"]], "precision (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.precision"]], "precision (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel attribute)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.precision"]], "precision (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.precision"]], "precision (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel attribute)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.precision"]], "precision (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel attribute)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.precision"]], "precision (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.precision"]], "prepare_data_per_node (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.convelitmodel.convelitmodel attribute)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel attribute)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel attribute)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel attribute)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel attribute)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel attribute)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel attribute)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel attribute)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.prepare_data_per_node"]], "prepare_data_per_node (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.prepare_data_per_node"]], "test_epoch_end() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.test_epoch_end"]], "test_epoch_end() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.test_epoch_end"]], "test_step() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.test_step"]], "test_step() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.test_step"]], "training (neuralkg_ind.lit_model.baselitmodel.baselitmodel attribute)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.training"]], "training (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.training"]], "training (neuralkg_ind.lit_model.convelitmodel.convelitmodel attribute)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.training"]], "training (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel attribute)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.training"]], "training (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel attribute)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.training"]], "training (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel attribute)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.training"]], "training (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel attribute)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.training"]], "training (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.training"]], "training (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.training"]], "training (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel attribute)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.training"]], "training (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.training"]], "training (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel attribute)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.training"]], "training (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel attribute)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.training"]], "training (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.training"]], "training_epoch_end() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.training_epoch_end"]], "training_epoch_end() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.training_epoch_end"]], "training_step() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.training_step"]], "training_step() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.training_step"]], "update_axiom() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.update_axiom"]], "use_amp (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.convelitmodel.convelitmodel attribute)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel attribute)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel attribute)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel attribute)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel attribute)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel attribute)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel attribute)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel attribute)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.use_amp"]], "use_amp (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel attribute)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.use_amp"]], "validation_epoch_end() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.validation_epoch_end"]], "validation_epoch_end() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.validation_epoch_end"]], "validation_step() (neuralkg_ind.lit_model.baselitmodel.baselitmodel method)": [[8, "neuralkg_ind.lit_model.BaseLitModel.BaseLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.compgcnlitmodel.compgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.CompGCNLitModel.CompGCNLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.convelitmodel.convelitmodel method)": [[8, "neuralkg_ind.lit_model.ConvELitModel.ConvELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.crosselitmodel.crosselitmodel method)": [[8, "neuralkg_ind.lit_model.CrossELitModel.CrossELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.iterelitmodel.iterelitmodel method)": [[8, "neuralkg_ind.lit_model.IterELitModel.IterELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.kbatlitmodel.kbatlitmodel method)": [[8, "neuralkg_ind.lit_model.KBATLitModel.KBATLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.kgelitmodel.kgelitmodel method)": [[8, "neuralkg_ind.lit_model.KGELitModel.KGELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.metagnnlitmodel.metagnnlitmodel method)": [[8, "neuralkg_ind.lit_model.MetaGNNLitModel.MetaGNNLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.rgcnlitmodel.rgcnlitmodel method)": [[8, "neuralkg_ind.lit_model.RGCNLitModel.RGCNLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.rugelitmodel.rugelitmodel method)": [[8, "neuralkg_ind.lit_model.RugELitModel.RugELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.segnnlitmodel.segnnlitmodel method)": [[8, "neuralkg_ind.lit_model.SEGNNLitModel.SEGNNLitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.snrilitmodel.snrilitmodel method)": [[8, "neuralkg_ind.lit_model.SNRILitModel.SNRILitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.xtranselitmodel.xtranselitmodel method)": [[8, "neuralkg_ind.lit_model.XTransELitModel.XTransELitModel.validation_step"]], "validation_step() (neuralkg_ind.lit_model.indgnnlitmodel.indgnnlitmodel method)": [[8, "neuralkg_ind.lit_model.indGNNLitModel.indGNNLitModel.validation_step"]], "adv_loss (class in neuralkg_ind.loss.adv_loss)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss"]], "complex_nne_aer_loss (class in neuralkg_ind.loss.complex_nne_aer_loss)": [[9, "neuralkg_ind.loss.ComplEx_NNE_AER_Loss.ComplEx_NNE_AER_Loss"]], "crosse_loss (class in neuralkg_ind.loss.crosse_loss)": [[9, "neuralkg_ind.loss.CrossE_Loss.CrossE_Loss"]], "cross_entropy_loss (class in neuralkg_ind.loss.cross_entropy_loss)": [[9, "neuralkg_ind.loss.Cross_Entropy_Loss.Cross_Entropy_Loss"]], "kbat_loss (class in neuralkg_ind.loss.kbat_loss)": [[9, "neuralkg_ind.loss.KBAT_Loss.KBAT_Loss"]], "logsig_loss (class in neuralkg_ind.loss.logsig_loss)": [[9, "neuralkg_ind.loss.Logsig_Loss.Logsig_Loss"]], "margin_loss (class in neuralkg_ind.loss.margin_loss)": [[9, "neuralkg_ind.loss.Margin_Loss.Margin_Loss"]], "rgcn_loss (class in neuralkg_ind.loss.rgcn_loss)": [[9, "neuralkg_ind.loss.RGCN_Loss.RGCN_Loss"]], "ruge_loss (class in neuralkg_ind.loss.ruge_loss)": [[9, "neuralkg_ind.loss.RugE_Loss.RugE_Loss"]], "simple_loss (class in neuralkg_ind.loss.simple_loss)": [[9, "neuralkg_ind.loss.SimplE_Loss.SimplE_Loss"]], "softplus_loss (class in neuralkg_ind.loss.softplus_loss)": [[9, "neuralkg_ind.loss.Softplus_Loss.Softplus_Loss"]], "args (neuralkg_ind.loss.adv_loss.adv_loss attribute)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss.args"]], "forward() (neuralkg_ind.loss.adv_loss.adv_loss method)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss.forward"]], "forward() (neuralkg_ind.loss.complex_nne_aer_loss.complex_nne_aer_loss method)": [[9, "neuralkg_ind.loss.ComplEx_NNE_AER_Loss.ComplEx_NNE_AER_Loss.forward"]], "forward() (neuralkg_ind.loss.crosse_loss.crosse_loss method)": [[9, "neuralkg_ind.loss.CrossE_Loss.CrossE_Loss.forward"]], "forward() (neuralkg_ind.loss.cross_entropy_loss.cross_entropy_loss method)": [[9, "neuralkg_ind.loss.Cross_Entropy_Loss.Cross_Entropy_Loss.forward"]], "forward() (neuralkg_ind.loss.kbat_loss.kbat_loss method)": [[9, "neuralkg_ind.loss.KBAT_Loss.KBAT_Loss.forward"]], "forward() (neuralkg_ind.loss.logsig_loss.logsig_loss method)": [[9, "neuralkg_ind.loss.Logsig_Loss.Logsig_Loss.forward"]], "forward() (neuralkg_ind.loss.margin_loss.margin_loss method)": [[9, "neuralkg_ind.loss.Margin_Loss.Margin_Loss.forward"]], "forward() (neuralkg_ind.loss.rgcn_loss.rgcn_loss method)": [[9, "neuralkg_ind.loss.RGCN_Loss.RGCN_Loss.forward"]], "forward() (neuralkg_ind.loss.ruge_loss.ruge_loss method)": [[9, "neuralkg_ind.loss.RugE_Loss.RugE_Loss.forward"]], "forward() (neuralkg_ind.loss.simple_loss.simple_loss method)": [[9, "neuralkg_ind.loss.SimplE_Loss.SimplE_Loss.forward"]], "forward() (neuralkg_ind.loss.softplus_loss.softplus_loss method)": [[9, "neuralkg_ind.loss.Softplus_Loss.Softplus_Loss.forward"]], "model (neuralkg_ind.loss.adv_loss.adv_loss attribute)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss.model"]], "model (neuralkg_ind.loss.softplus_loss.softplus_loss attribute)": [[9, "neuralkg_ind.loss.Softplus_Loss.Softplus_Loss.model"]], "neuralkg_ind.loss.adv_loss": [[9, "module-neuralkg_ind.loss.Adv_Loss"]], "neuralkg_ind.loss.complex_nne_aer_loss": [[9, "module-neuralkg_ind.loss.ComplEx_NNE_AER_Loss"]], "neuralkg_ind.loss.crosse_loss": [[9, "module-neuralkg_ind.loss.CrossE_Loss"]], "neuralkg_ind.loss.cross_entropy_loss": [[9, "module-neuralkg_ind.loss.Cross_Entropy_Loss"]], "neuralkg_ind.loss.kbat_loss": [[9, "module-neuralkg_ind.loss.KBAT_Loss"]], "neuralkg_ind.loss.logsig_loss": [[9, "module-neuralkg_ind.loss.Logsig_Loss"]], "neuralkg_ind.loss.margin_loss": [[9, "module-neuralkg_ind.loss.Margin_Loss"]], "neuralkg_ind.loss.rgcn_loss": [[9, "module-neuralkg_ind.loss.RGCN_Loss"]], "neuralkg_ind.loss.ruge_loss": [[9, "module-neuralkg_ind.loss.RugE_Loss"]], "neuralkg_ind.loss.simple_loss": [[9, "module-neuralkg_ind.loss.SimplE_Loss"]], "neuralkg_ind.loss.softplus_loss": [[9, "module-neuralkg_ind.loss.Softplus_Loss"]], "normalize() (neuralkg_ind.loss.adv_loss.adv_loss method)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss.normalize"]], "reg_loss() (neuralkg_ind.loss.rgcn_loss.rgcn_loss method)": [[9, "neuralkg_ind.loss.RGCN_Loss.RGCN_Loss.reg_loss"]], "training (neuralkg_ind.loss.adv_loss.adv_loss attribute)": [[9, "neuralkg_ind.loss.Adv_Loss.Adv_Loss.training"]], "training (neuralkg_ind.loss.complex_nne_aer_loss.complex_nne_aer_loss attribute)": [[9, "neuralkg_ind.loss.ComplEx_NNE_AER_Loss.ComplEx_NNE_AER_Loss.training"]], "training (neuralkg_ind.loss.crosse_loss.crosse_loss attribute)": [[9, "neuralkg_ind.loss.CrossE_Loss.CrossE_Loss.training"]], "training (neuralkg_ind.loss.cross_entropy_loss.cross_entropy_loss attribute)": [[9, "neuralkg_ind.loss.Cross_Entropy_Loss.Cross_Entropy_Loss.training"]], "training (neuralkg_ind.loss.kbat_loss.kbat_loss attribute)": [[9, "neuralkg_ind.loss.KBAT_Loss.KBAT_Loss.training"]], "training (neuralkg_ind.loss.logsig_loss.logsig_loss attribute)": [[9, "neuralkg_ind.loss.Logsig_Loss.Logsig_Loss.training"]], "training (neuralkg_ind.loss.margin_loss.margin_loss attribute)": [[9, "neuralkg_ind.loss.Margin_Loss.Margin_Loss.training"]], "training (neuralkg_ind.loss.rgcn_loss.rgcn_loss attribute)": [[9, "neuralkg_ind.loss.RGCN_Loss.RGCN_Loss.training"]], "training (neuralkg_ind.loss.ruge_loss.ruge_loss attribute)": [[9, "neuralkg_ind.loss.RugE_Loss.RugE_Loss.training"]], "training (neuralkg_ind.loss.simple_loss.simple_loss attribute)": [[9, "neuralkg_ind.loss.SimplE_Loss.SimplE_Loss.training"]], "training (neuralkg_ind.loss.softplus_loss.softplus_loss attribute)": [[9, "neuralkg_ind.loss.Softplus_Loss.Softplus_Loss.training"]], "bfs_relational() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.bfs_relational"]], "data2pkl() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.data2pkl"]], "deserialize() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.deserialize"]], "deserialize_rmpi() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.deserialize_RMPI"]], "extract_save_subgraph() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.extract_save_subgraph"]], "gen_meta_subgraph_datasets() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.gen_meta_subgraph_datasets"]], "gen_subgraph_datasets() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.gen_subgraph_datasets"]], "get_average_meta_subgraph_size() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_average_meta_subgraph_size"]], "get_average_subgraph_size() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_average_subgraph_size"]], "get_edge_count() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_edge_count"]], "get_g() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_g"]], "get_g_bidir() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_g_bidir"]], "get_hr2t_rt2h() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_hr2t_rt2h"]], "get_hr2t_rt2h_sup_que() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_hr2t_rt2h_sup_que"]], "get_indtest_test_dataset_and_train_g() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_indtest_test_dataset_and_train_g"]], "get_neighbor_nodes() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_neighbor_nodes"]], "get_neighbors() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_neighbors"]], "get_param() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.get_param"]], "import_class() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.import_class"]], "incidence_matrix() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.incidence_matrix"]], "intialize_worker() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.intialize_worker"]], "links2subgraphs() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.links2subgraphs"]], "load_config() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.load_config"]], "load_data_grail() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.load_data_grail"]], "load_ind_data_grail() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.load_ind_data_grail"]], "log_metrics() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.log_metrics"]], "log_step_metrics() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.log_step_metrics"]], "neuralkg_ind.utils.setup_parser": [[11, "module-neuralkg_ind.utils.setup_parser"]], "neuralkg_ind.utils.tools": [[11, "module-neuralkg_ind.utils.tools"]], "node_label() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.node_label"]], "override_config() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.override_config"]], "reidx() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.reidx"]], "reidx_withr() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.reidx_withr"]], "reidx_withr_ande() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.reidx_withr_ande"]], "remove_nodes() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.remove_nodes"]], "sample_neg() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.sample_neg"]], "sample_one_subgraph() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.sample_one_subgraph"]], "save_config() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.save_config"]], "serialize() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.serialize"]], "set_logger() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.set_logger"]], "setup_parser() (in module neuralkg_ind.utils.setup_parser)": [[11, "neuralkg_ind.utils.setup_parser.setup_parser"]], "sp_row_vec_from_idx_list() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.sp_row_vec_from_idx_list"]], "ssp_multigraph_to_dgl() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.ssp_multigraph_to_dgl"]], "subgraph_extraction_labeling() (in module neuralkg_ind.utils.tools)": [[11, "neuralkg_ind.utils.tools.subgraph_extraction_labeling"]], "complex_nne_aer (class in neuralkg_ind.model.rulemodel.complex_nne_aer)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER"]], "itere (class in neuralkg_ind.model.rulemodel.itere)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE"]], "model (class in neuralkg_ind.model.rulemodel.model)": [[13, "neuralkg_ind.model.RuleModel.model.Model"]], "ruge (class in neuralkg_ind.model.rulemodel.ruge)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE"]], "args (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.args"]], "args (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.args"]], "args (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.args"]], "embedding_range (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.embedding_range"]], "embedding_range (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.embedding_range"]], "embedding_range (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.embedding_range"]], "ent_emb (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.ent_emb"]], "ent_emb (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.ent_emb"]], "ent_emb (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.ent_emb"]], "epsilon (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.epsilon"]], "epsilon (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.epsilon"]], "epsilon (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.epsilon"]], "forward() (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer method)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.forward"]], "forward() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.forward"]], "forward() (neuralkg_ind.model.rulemodel.ruge.ruge method)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.forward"]], "forward() (neuralkg_ind.model.rulemodel.model.model method)": [[13, "neuralkg_ind.model.RuleModel.model.Model.forward"]], "generate_new_train_triples() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.generate_new_train_triples"]], "get_axiom() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.get_axiom"]], "get_rule() (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer method)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.get_rule"]], "get_rule() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.get_rule"]], "get_score() (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer method)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.get_score"]], "get_score() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.get_score"]], "get_score() (neuralkg_ind.model.rulemodel.ruge.ruge method)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.get_score"]], "init_emb() (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer method)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.init_emb"]], "init_emb() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.init_emb"]], "init_emb() (neuralkg_ind.model.rulemodel.ruge.ruge method)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.init_emb"]], "init_emb() (neuralkg_ind.model.rulemodel.model.model method)": [[13, "neuralkg_ind.model.RuleModel.model.Model.init_emb"]], "margin (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.margin"]], "margin (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.margin"]], "margin (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.margin"]], "neuralkg_ind.model.rulemodel.complex_nne_aer": [[13, "module-neuralkg_ind.model.RuleModel.ComplEx_NNE_AER"]], "neuralkg_ind.model.rulemodel.itere": [[13, "module-neuralkg_ind.model.RuleModel.IterE"]], "neuralkg_ind.model.rulemodel.ruge": [[13, "module-neuralkg_ind.model.RuleModel.RugE"]], "neuralkg_ind.model.rulemodel.model": [[13, "module-neuralkg_ind.model.RuleModel.model"]], "rel_emb (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.rel_emb"]], "rel_emb (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.rel_emb"]], "rel_emb (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.rel_emb"]], "run_axiom_probability() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.run_axiom_probability"]], "score_func() (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer method)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.score_func"]], "score_func() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.score_func"]], "score_func() (neuralkg_ind.model.rulemodel.ruge.ruge method)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.score_func"]], "score_func() (neuralkg_ind.model.rulemodel.model.model method)": [[13, "neuralkg_ind.model.RuleModel.model.Model.score_func"]], "sim() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.sim"]], "split_embedding() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.split_embedding"]], "training (neuralkg_ind.model.rulemodel.complex_nne_aer.complex_nne_aer attribute)": [[13, "neuralkg_ind.model.RuleModel.ComplEx_NNE_AER.ComplEx_NNE_AER.training"]], "training (neuralkg_ind.model.rulemodel.itere.itere attribute)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.training"]], "training (neuralkg_ind.model.rulemodel.ruge.ruge attribute)": [[13, "neuralkg_ind.model.RuleModel.RugE.RugE.training"]], "training (neuralkg_ind.model.rulemodel.model.model attribute)": [[13, "neuralkg_ind.model.RuleModel.model.Model.training"]], "tri2emb() (neuralkg_ind.model.rulemodel.model.model method)": [[13, "neuralkg_ind.model.RuleModel.model.Model.tri2emb"]], "update_train_triples() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.update_train_triples"]], "update_valid_axioms() (neuralkg_ind.model.rulemodel.itere.itere method)": [[13, "neuralkg_ind.model.RuleModel.IterE.IterE.update_valid_axioms"]]}})